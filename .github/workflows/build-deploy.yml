name: build-deploy

on:  
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-deploy:

    runs-on: ubuntu-latest

    steps:
    - name: Set docker repository name and tag
      id: docker_repository
      run: |
        echo "::set-output name=image.repository::$(echo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }})"
        echo "::set-output name=image.tag::$(echo sha-${{ github.event.pull_request.head.sha }} | cut -c1-12)"

    - name: Set helm configmaps
      id: helm_configmaps
      run: |
        echo "::set-output name=configMaps.catamel-cm.config\.local\.js::$(cat helm_configs/development/catamel_cm/config.local.js)"
        echo "::set-output name=configMaps.catamel-cm.login-callbacks\.js::$(cat helm_configs/development/catamel_cm/login-callbacks.js)"
        echo "::set-output name=configMaps.catamel-cm.middleware\.development\.json::$(cat helm_configs/development/catamel_cm/middleware.development.json)"

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3.6.2
      with:
        images: ${{ steps.docker_repository.outputs.image.repository }}
        tags: |
          type=raw,value=${{steps.docker_repository.outputs.image.tag}}
    
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: backend/.
        push: ${{ github.event_name == 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Deploy to k8s using helm
      id: helm-deploy
      uses: 'deliverybot/helm@v1'
      with:
        release: 'catamel-github'
        namespace: 'scicat-development'
        chart: 'generic_service_chart'
        values: |
          ${{ toJSON(steps.docker_repository.outputs) }}
          ${{ toJSON(steps.helm_configmaps.outputs) }}
        value-files: "helm_configs/development/values.yaml"
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
