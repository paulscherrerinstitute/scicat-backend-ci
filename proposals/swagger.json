{"swagger":"2.0","info":{"version":"3.1.0","title":"dacat-api","description":"dacat-api"},"basePath":"/api/v3","paths":{"/Users/{id}/accessTokens/{fk}":{"get":{"tags":["User"],"summary":"Find a related item by id for accessTokens.","operationId":"User.prototype.__findById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a related item by id for accessTokens.","operationId":"User.prototype.__destroyById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["User"],"summary":"Update a related item by id for accessTokens.","operationId":"User.prototype.__updateById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false}},"/Users/{id}/settings":{"get":{"tags":["User"],"summary":"Fetches hasOne relation settings.","operationId":"User.prototype.__get__settings","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false},"post":{"tags":["User"],"summary":"Creates a new instance in settings of this model.","operationId":"User.prototype.__create__settings","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Update settings of this model.","operationId":"User.prototype.__update__settings","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Deletes settings of this model.","operationId":"User.prototype.__destroy__settings","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/identities/{fk}":{"get":{"tags":["User"],"summary":"Find a related item by id for identities.","operationId":"User.prototype.__findById__identities","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for identities","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a related item by id for identities.","operationId":"User.prototype.__destroyById__identities","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for identities","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["User"],"summary":"Update a related item by id for identities.","operationId":"User.prototype.__updateById__identities","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for identities","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/Users/{id}/credentials/{fk}":{"get":{"tags":["User"],"summary":"Find a related item by id for credentials.","operationId":"User.prototype.__findById__credentials","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for credentials","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a related item by id for credentials.","operationId":"User.prototype.__destroyById__credentials","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for credentials","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["User"],"summary":"Update a related item by id for credentials.","operationId":"User.prototype.__updateById__credentials","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for credentials","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/Users/{id}/accessTokens":{"get":{"tags":["User"],"summary":"Queries accessTokens of User.","operationId":"User.prototype.__get__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessToken"}}}},"deprecated":false},"post":{"tags":["User"],"summary":"Creates a new instance in accessTokens of this model.","operationId":"User.prototype.__create__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Deletes all accessTokens of this model.","operationId":"User.prototype.__delete__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/accessTokens/count":{"get":{"tags":["User"],"summary":"Counts accessTokens of User.","operationId":"User.prototype.__count__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users/{id}/identities":{"get":{"tags":["User"],"summary":"Queries identities of User.","operationId":"User.prototype.__get__identities","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/UserIdentity"}}}},"deprecated":false},"post":{"tags":["User"],"summary":"Creates a new instance in identities of this model.","operationId":"User.prototype.__create__identities","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Deletes all identities of this model.","operationId":"User.prototype.__delete__identities","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/identities/count":{"get":{"tags":["User"],"summary":"Counts identities of User.","operationId":"User.prototype.__count__identities","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users/{id}/credentials":{"get":{"tags":["User"],"summary":"Queries credentials of User.","operationId":"User.prototype.__get__credentials","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/UserCredential"}}}},"deprecated":false},"post":{"tags":["User"],"summary":"Creates a new instance in credentials of this model.","operationId":"User.prototype.__create__credentials","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Deletes all credentials of this model.","operationId":"User.prototype.__delete__credentials","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/credentials/count":{"get":{"tags":["User"],"summary":"Counts credentials of User.","operationId":"User.prototype.__count__credentials","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users":{"post":{"tags":["User"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"User.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"User.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"User.replaceOrCreate__put_Users","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"User.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}},"deprecated":false}},"/Users/replaceOrCreate":{"post":{"tags":["User"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"User.replaceOrCreate__post_Users_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/upsertWithWhere":{"post":{"tags":["User"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"User.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/exists":{"get":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__get_Users_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Users/{id}":{"head":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__head_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"User.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"User.replaceById__put_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"User.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"User.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/replace":{"post":{"tags":["User"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"User.replaceById__post_Users_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/findOne":{"get":{"tags":["User"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"User.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/update":{"post":{"tags":["User"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"User.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Users/count":{"get":{"tags":["User"],"summary":"Count instances of the model matched by where from the data source.","operationId":"User.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users/change-stream":{"post":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__post_Users_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__get_Users_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Users/login":{"post":{"tags":["User"],"summary":"Login a user with username/email and password.","operationId":"User.login","parameters":[{"name":"credentials","in":"body","required":true,"schema":{"type":"object"}},{"name":"include","in":"query","description":"Related objects to include in the response. See the description of return value for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n  - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n\n","type":"object"}}},"deprecated":false}},"/Users/logout":{"post":{"tags":["User"],"summary":"Logout a user with access token.","operationId":"User.logout","parameters":[],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/verify":{"post":{"tags":["User"],"summary":"Trigger user's identity verification with configured verifyOptions","operationId":"User.prototype.verify","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/confirm":{"get":{"tags":["User"],"summary":"Confirm a user registration with identity verification token.","operationId":"User.confirm","parameters":[{"name":"uid","in":"query","required":true,"type":"string"},{"name":"token","in":"query","required":true,"type":"string"},{"name":"redirect","in":"query","required":false,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/reset":{"post":{"tags":["User"],"summary":"Reset password for a user with email.","operationId":"User.resetPassword","parameters":[{"name":"options","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/change-password":{"post":{"tags":["User"],"summary":"Change a user's password.","operationId":"User.changePassword","parameters":[{"name":"oldPassword","in":"formData","required":true,"type":"string"},{"name":"newPassword","in":"formData","required":true,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/reset-password":{"post":{"tags":["User"],"summary":"Reset user's password via a password-reset token.","operationId":"User.setPassword","parameters":[{"name":"newPassword","in":"formData","required":true,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/userInfos":{"get":{"tags":["User"],"summary":"Returns username, email , group membership etc for the user linked with the provided accessToken.","operationId":"User.userInfos","parameters":[],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Users/jwt":{"post":{"tags":["User"],"operationId":"User.jwt","parameters":[],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"jwt":{"type":"string"}}}}},"deprecated":false}},"/Datasets/{id}/samples/{fk}":{"get":{"tags":["Dataset"],"summary":"Find a related item by id for samples.","operationId":"Dataset.prototype.__findById__samples","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for samples","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Delete a related item by id for samples.","operationId":"Dataset.prototype.__destroyById__samples","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for samples","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Update a related item by id for samples.","operationId":"Dataset.prototype.__updateById__samples","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for samples","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Datasets/{id}/publisheddata":{"get":{"tags":["Dataset"],"summary":"Fetches belongsTo relation publisheddata.","operationId":"Dataset.prototype.__get__publisheddata","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false}},"/Datasets/{id}/datasetLifecycle":{"get":{"tags":["Dataset"],"summary":"Fetches hasOne relation datasetLifecycle.","operationId":"Dataset.prototype.__get__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"post":{"tags":["Dataset"],"summary":"Creates a new instance in datasetLifecycle of this model.","operationId":"Dataset.prototype.__create__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Update datasetLifecycle of this model.","operationId":"Dataset.prototype.__update__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Deletes datasetLifecycle of this model.","operationId":"Dataset.prototype.__destroy__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/datablocks/{fk}":{"get":{"tags":["Dataset"],"summary":"Find a related item by id for datablocks.","operationId":"Dataset.prototype.__findById__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Delete a related item by id for datablocks.","operationId":"Dataset.prototype.__destroyById__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Update a related item by id for datablocks.","operationId":"Dataset.prototype.__updateById__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datasets/{id}/origdatablocks/{fk}":{"get":{"tags":["Dataset"],"summary":"Find a related item by id for origdatablocks.","operationId":"Dataset.prototype.__findById__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Delete a related item by id for origdatablocks.","operationId":"Dataset.prototype.__destroyById__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Update a related item by id for origdatablocks.","operationId":"Dataset.prototype.__updateById__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/Datasets/{id}/historyList/{fk}":{"get":{"tags":["Dataset"],"summary":"Find a related item by id for historyList.","operationId":"Dataset.prototype.__findById__historyList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for historyList","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Message"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Delete a related item by id for historyList.","operationId":"Dataset.prototype.__destroyById__historyList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for historyList","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Update a related item by id for historyList.","operationId":"Dataset.prototype.__updateById__historyList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for historyList","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Message"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Message"}}},"deprecated":false}},"/Datasets/{id}/attachments/{fk}":{"get":{"tags":["Dataset"],"summary":"Find a related item by id for attachments.","operationId":"Dataset.prototype.__findById__attachments","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Delete a related item by id for attachments.","operationId":"Dataset.prototype.__destroyById__attachments","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Update a related item by id for attachments.","operationId":"Dataset.prototype.__updateById__attachments","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false}},"/Datasets/{id}/instrument":{"get":{"tags":["Dataset"],"summary":"Fetches belongsTo relation instrument.","operationId":"Dataset.prototype.__get__instrument","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false}},"/Datasets/{id}/techniquesList/{fk}":{"get":{"tags":["Dataset"],"summary":"Find a related item by id for techniquesList.","operationId":"Dataset.prototype.__findById__techniquesList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for techniquesList","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Technique"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Delete a related item by id for techniquesList.","operationId":"Dataset.prototype.__destroyById__techniquesList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for techniquesList","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Update a related item by id for techniquesList.","operationId":"Dataset.prototype.__updateById__techniquesList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for techniquesList","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Technique"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Technique"}}},"deprecated":false}},"/Datasets/{id}/samples":{"get":{"tags":["Dataset"],"summary":"Queries samples of Dataset.","operationId":"Dataset.prototype.__get__samples","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Sample"}}}},"deprecated":false},"post":{"tags":["Dataset"],"summary":"Creates a new instance in samples of this model.","operationId":"Dataset.prototype.__create__samples","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Deletes all samples of this model.","operationId":"Dataset.prototype.__delete__samples","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/samples/count":{"get":{"tags":["Dataset"],"summary":"Counts samples of Dataset.","operationId":"Dataset.prototype.__count__samples","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets/{id}/datablocks":{"get":{"tags":["Dataset"],"summary":"Queries datablocks of Dataset.","operationId":"Dataset.prototype.__get__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Datablock"}}}},"deprecated":false},"post":{"tags":["Dataset"],"summary":"Creates a new instance in datablocks of this model.","operationId":"Dataset.prototype.__create__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Deletes all datablocks of this model.","operationId":"Dataset.prototype.__delete__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/datablocks/count":{"get":{"tags":["Dataset"],"summary":"Counts datablocks of Dataset.","operationId":"Dataset.prototype.__count__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets/{id}/origdatablocks":{"get":{"tags":["Dataset"],"summary":"Queries origdatablocks of Dataset.","operationId":"Dataset.prototype.__get__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/OrigDatablock"}}}},"deprecated":false},"post":{"tags":["Dataset"],"summary":"Creates a new instance in origdatablocks of this model.","operationId":"Dataset.prototype.__create__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Deletes all origdatablocks of this model.","operationId":"Dataset.prototype.__delete__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/origdatablocks/count":{"get":{"tags":["Dataset"],"summary":"Counts origdatablocks of Dataset.","operationId":"Dataset.prototype.__count__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets/{id}/historyList":{"get":{"tags":["Dataset"],"summary":"Queries historyList of Dataset.","operationId":"Dataset.prototype.__get__historyList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Message"}}}},"deprecated":false},"post":{"tags":["Dataset"],"summary":"Creates a new instance in historyList of this model.","operationId":"Dataset.prototype.__create__historyList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Message"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Message"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Deletes all historyList of this model.","operationId":"Dataset.prototype.__delete__historyList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/historyList/count":{"get":{"tags":["Dataset"],"summary":"Counts historyList of Dataset.","operationId":"Dataset.prototype.__count__historyList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets/{id}/attachments":{"get":{"tags":["Dataset"],"summary":"Queries attachments of Dataset.","operationId":"Dataset.prototype.__get__attachments","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Attachment"}}}},"deprecated":false},"post":{"tags":["Dataset"],"summary":"Creates a new instance in attachments of this model.","operationId":"Dataset.prototype.__create__attachments","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Deletes all attachments of this model.","operationId":"Dataset.prototype.__delete__attachments","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/attachments/count":{"get":{"tags":["Dataset"],"summary":"Counts attachments of Dataset.","operationId":"Dataset.prototype.__count__attachments","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets/{id}/techniquesList":{"get":{"tags":["Dataset"],"summary":"Queries techniquesList of Dataset.","operationId":"Dataset.prototype.__get__techniquesList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Technique"}}}},"deprecated":false},"post":{"tags":["Dataset"],"summary":"Creates a new instance in techniquesList of this model.","operationId":"Dataset.prototype.__create__techniquesList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Technique"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Technique"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Deletes all techniquesList of this model.","operationId":"Dataset.prototype.__delete__techniquesList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/techniquesList/count":{"get":{"tags":["Dataset"],"summary":"Counts techniquesList of Dataset.","operationId":"Dataset.prototype.__count__techniquesList","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets":{"post":{"tags":["Dataset"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Dataset.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Dataset.patchOrCreate__put_Datasets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"patch":{"tags":["Dataset"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Dataset.patchOrCreate__patch_Datasets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"get":{"tags":["Dataset"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Dataset.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Dataset"}}}},"deprecated":false}},"/Datasets/replaceOrCreate":{"post":{"tags":["Dataset"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Dataset.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datasets/upsertWithWhere":{"post":{"tags":["Dataset"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Dataset.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datasets/{id}/exists":{"get":{"tags":["Dataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"Dataset.exists__get_Datasets_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Datasets/{id}":{"head":{"tags":["Dataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"Dataset.exists__head_Datasets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Dataset"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Dataset.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Dataset.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Dataset.prototype.patchAttributes__put_Datasets_{id}","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"patch":{"tags":["Dataset"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Dataset.prototype.patchAttributes__patch_Datasets_{id}","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datasets/{id}/replace":{"post":{"tags":["Dataset"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Dataset.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datasets/findOne":{"get":{"tags":["Dataset"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Dataset.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datasets/update":{"post":{"tags":["Dataset"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Dataset.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets/count":{"get":{"tags":["Dataset"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Dataset.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets/change-stream":{"post":{"tags":["Dataset"],"summary":"Create a change stream.","operationId":"Dataset.createChangeStream__post_Datasets_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Dataset"],"summary":"Create a change stream.","operationId":"Dataset.createChangeStream__get_Datasets_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Datasets/isValid":{"post":{"tags":["Dataset"],"summary":"Check if data is valid according to a schema","operationId":"Dataset.isValid","parameters":[{"name":"ownableItem","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Datasets/resetArchiveStatus":{"put":{"tags":["Dataset"],"summary":"Reset archive status by deleting created datablocks of dataset and resetting  archiveStatusMessage and archivable flag.","operationId":"Dataset.reset","parameters":[{"name":"datasetId","in":"formData","required":false,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Datasets/fullfacet":{"get":{"tags":["Dataset"],"summary":"Return facet counts relevant for the given selected subset of datasets. ","operationId":"Dataset.fullfacet","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name and values of fields. There ia also support for a `text` search to look for strngs anywhere in the dataset.","required":false,"type":"string","format":"JSON"},{"name":"facets","in":"query","description":"Defines list of field names, for which facet counts should be calculated","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Datasets/fullquery":{"get":{"tags":["Dataset"],"summary":"Return datasets fulfilling complex filter conditions, including from fields of joined models.","operationId":"Dataset.fullquery","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name of values of fields requested. There ia also support for a `text` search to look for strings anywhere in the dataset. Skip and limit parameters allow for paging.","required":false,"type":"string","format":"JSON"},{"name":"limits","in":"query","description":"Define further query parameters like skip, limit, order","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Datasets/anonymousquery":{"get":{"tags":["Dataset"],"summary":"Return datasets fulfilling complex filter conditions, including from fields of joined models.","operationId":"Dataset.anonymousquery","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name of values of fields requested. There ia also support for a `text` search to look for strings anywhere in the dataset. Skip and limit parameters allow for paging.","required":false,"type":"string","format":"JSON"},{"name":"limits","in":"query","description":"Define further query parameters like skip, limit, order","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Datasets/{id}/appendToArrayField":{"post":{"tags":["Dataset"],"summary":"updates a single record by appending data to the specified field","operationId":"Dataset.appendToArrayField","parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"fieldName","in":"formData","description":"Name of field to append data to","required":true,"type":"string"},{"name":"data","in":"formData","description":"An array of values to append","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Datasets/metadataKeys":{"get":{"tags":["Dataset"],"summary":"Return array of metadata keys from datasets corresponding to the current filters.","operationId":"Dataset.metadataKeys","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name of values of fields requested. There is also support for a `text` search to look for strings anywhere in the dataset.","required":false,"type":"string","format":"JSON"},{"name":"limits","in":"query","description":"Define further query parameters like skip, limit, order","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Datasets/{id}/thumbnail":{"get":{"tags":["Dataset"],"operationId":"Dataset.thumbnail","parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"string"}}},"deprecated":false}},"/Datasets/reduce":{"post":{"tags":["Dataset"],"summary":"Sends a post request for Dataset reduction to OpenWhisk","operationId":"Dataset.reduceDataset","parameters":[{"name":"dataset","in":"body","description":"The Dataset to send for reduction","required":true,"schema":{"description":"The Dataset to send for reduction","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The response from the OpenWhisk reduce action","type":"object"}}},"deprecated":false}},"/RawDatasets/{id}/samples/{fk}":{"get":{"tags":["RawDataset"],"summary":"Find a related item by id for samples.","operationId":"RawDataset.prototype.__findById__samples","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for samples","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Delete a related item by id for samples.","operationId":"RawDataset.prototype.__destroyById__samples","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for samples","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Update a related item by id for samples.","operationId":"RawDataset.prototype.__updateById__samples","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for samples","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/RawDatasets/{id}/sample":{"get":{"tags":["RawDataset"],"summary":"Fetches belongsTo relation sample.","operationId":"RawDataset.prototype.__get__sample","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/RawDatasets/{id}/proposal":{"get":{"tags":["RawDataset"],"summary":"Fetches belongsTo relation proposal.","operationId":"RawDataset.prototype.__get__proposal","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/RawDatasets/{id}/publisheddata":{"get":{"tags":["RawDataset"],"summary":"Fetches belongsTo relation publisheddata.","operationId":"RawDataset.prototype.__get__publisheddata","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false}},"/RawDatasets/{id}/datasetLifecycle":{"get":{"tags":["RawDataset"],"summary":"Fetches hasOne relation datasetLifecycle.","operationId":"RawDataset.prototype.__get__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"post":{"tags":["RawDataset"],"summary":"Creates a new instance in datasetLifecycle of this model.","operationId":"RawDataset.prototype.__create__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Update datasetLifecycle of this model.","operationId":"RawDataset.prototype.__update__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Deletes datasetLifecycle of this model.","operationId":"RawDataset.prototype.__destroy__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/RawDatasets/{id}/datablocks/{fk}":{"get":{"tags":["RawDataset"],"summary":"Find a related item by id for datablocks.","operationId":"RawDataset.prototype.__findById__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Delete a related item by id for datablocks.","operationId":"RawDataset.prototype.__destroyById__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Update a related item by id for datablocks.","operationId":"RawDataset.prototype.__updateById__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/RawDatasets/{id}/origdatablocks/{fk}":{"get":{"tags":["RawDataset"],"summary":"Find a related item by id for origdatablocks.","operationId":"RawDataset.prototype.__findById__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Delete a related item by id for origdatablocks.","operationId":"RawDataset.prototype.__destroyById__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Update a related item by id for origdatablocks.","operationId":"RawDataset.prototype.__updateById__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/RawDatasets/{id}/historyList/{fk}":{"get":{"tags":["RawDataset"],"summary":"Find a related item by id for historyList.","operationId":"RawDataset.prototype.__findById__historyList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for historyList","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Message"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Delete a related item by id for historyList.","operationId":"RawDataset.prototype.__destroyById__historyList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for historyList","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Update a related item by id for historyList.","operationId":"RawDataset.prototype.__updateById__historyList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for historyList","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Message"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Message"}}},"deprecated":false}},"/RawDatasets/{id}/attachments/{fk}":{"get":{"tags":["RawDataset"],"summary":"Find a related item by id for attachments.","operationId":"RawDataset.prototype.__findById__attachments","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Delete a related item by id for attachments.","operationId":"RawDataset.prototype.__destroyById__attachments","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Update a related item by id for attachments.","operationId":"RawDataset.prototype.__updateById__attachments","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false}},"/RawDatasets/{id}/instrument":{"get":{"tags":["RawDataset"],"summary":"Fetches belongsTo relation instrument.","operationId":"RawDataset.prototype.__get__instrument","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false}},"/RawDatasets/{id}/techniquesList/{fk}":{"get":{"tags":["RawDataset"],"summary":"Find a related item by id for techniquesList.","operationId":"RawDataset.prototype.__findById__techniquesList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for techniquesList","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Technique"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Delete a related item by id for techniquesList.","operationId":"RawDataset.prototype.__destroyById__techniquesList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for techniquesList","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Update a related item by id for techniquesList.","operationId":"RawDataset.prototype.__updateById__techniquesList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for techniquesList","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Technique"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Technique"}}},"deprecated":false}},"/RawDatasets/{id}/samples":{"get":{"tags":["RawDataset"],"summary":"Queries samples of RawDataset.","operationId":"RawDataset.prototype.__get__samples","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Sample"}}}},"deprecated":false},"post":{"tags":["RawDataset"],"summary":"Creates a new instance in samples of this model.","operationId":"RawDataset.prototype.__create__samples","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Deletes all samples of this model.","operationId":"RawDataset.prototype.__delete__samples","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/RawDatasets/{id}/samples/count":{"get":{"tags":["RawDataset"],"summary":"Counts samples of RawDataset.","operationId":"RawDataset.prototype.__count__samples","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets/{id}/datablocks":{"get":{"tags":["RawDataset"],"summary":"Queries datablocks of RawDataset.","operationId":"RawDataset.prototype.__get__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Datablock"}}}},"deprecated":false},"post":{"tags":["RawDataset"],"summary":"Creates a new instance in datablocks of this model.","operationId":"RawDataset.prototype.__create__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Deletes all datablocks of this model.","operationId":"RawDataset.prototype.__delete__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/RawDatasets/{id}/datablocks/count":{"get":{"tags":["RawDataset"],"summary":"Counts datablocks of RawDataset.","operationId":"RawDataset.prototype.__count__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets/{id}/origdatablocks":{"get":{"tags":["RawDataset"],"summary":"Queries origdatablocks of RawDataset.","operationId":"RawDataset.prototype.__get__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/OrigDatablock"}}}},"deprecated":false},"post":{"tags":["RawDataset"],"summary":"Creates a new instance in origdatablocks of this model.","operationId":"RawDataset.prototype.__create__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Deletes all origdatablocks of this model.","operationId":"RawDataset.prototype.__delete__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/RawDatasets/{id}/origdatablocks/count":{"get":{"tags":["RawDataset"],"summary":"Counts origdatablocks of RawDataset.","operationId":"RawDataset.prototype.__count__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets/{id}/historyList":{"get":{"tags":["RawDataset"],"summary":"Queries historyList of RawDataset.","operationId":"RawDataset.prototype.__get__historyList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Message"}}}},"deprecated":false},"post":{"tags":["RawDataset"],"summary":"Creates a new instance in historyList of this model.","operationId":"RawDataset.prototype.__create__historyList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Message"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Message"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Deletes all historyList of this model.","operationId":"RawDataset.prototype.__delete__historyList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/RawDatasets/{id}/historyList/count":{"get":{"tags":["RawDataset"],"summary":"Counts historyList of RawDataset.","operationId":"RawDataset.prototype.__count__historyList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets/{id}/attachments":{"get":{"tags":["RawDataset"],"summary":"Queries attachments of RawDataset.","operationId":"RawDataset.prototype.__get__attachments","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Attachment"}}}},"deprecated":false},"post":{"tags":["RawDataset"],"summary":"Creates a new instance in attachments of this model.","operationId":"RawDataset.prototype.__create__attachments","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Deletes all attachments of this model.","operationId":"RawDataset.prototype.__delete__attachments","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/RawDatasets/{id}/attachments/count":{"get":{"tags":["RawDataset"],"summary":"Counts attachments of RawDataset.","operationId":"RawDataset.prototype.__count__attachments","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets/{id}/techniquesList":{"get":{"tags":["RawDataset"],"summary":"Queries techniquesList of RawDataset.","operationId":"RawDataset.prototype.__get__techniquesList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Technique"}}}},"deprecated":false},"post":{"tags":["RawDataset"],"summary":"Creates a new instance in techniquesList of this model.","operationId":"RawDataset.prototype.__create__techniquesList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Technique"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Technique"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Deletes all techniquesList of this model.","operationId":"RawDataset.prototype.__delete__techniquesList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/RawDatasets/{id}/techniquesList/count":{"get":{"tags":["RawDataset"],"summary":"Counts techniquesList of RawDataset.","operationId":"RawDataset.prototype.__count__techniquesList","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets":{"post":{"tags":["RawDataset"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"RawDataset.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"RawDataset.patchOrCreate__put_RawDatasets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false},"patch":{"tags":["RawDataset"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"RawDataset.patchOrCreate__patch_RawDatasets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false},"get":{"tags":["RawDataset"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"RawDataset.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/RawDataset"}}}},"deprecated":false}},"/RawDatasets/replaceOrCreate":{"post":{"tags":["RawDataset"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"RawDataset.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false}},"/RawDatasets/upsertWithWhere":{"post":{"tags":["RawDataset"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"RawDataset.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false}},"/RawDatasets/{id}/exists":{"get":{"tags":["RawDataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"RawDataset.exists__get_RawDatasets_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/RawDatasets/{id}":{"head":{"tags":["RawDataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"RawDataset.exists__head_RawDatasets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["RawDataset"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"RawDataset.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"RawDataset.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"RawDataset.prototype.patchAttributes__put_RawDatasets_{id}","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false},"patch":{"tags":["RawDataset"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"RawDataset.prototype.patchAttributes__patch_RawDatasets_{id}","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false}},"/RawDatasets/{id}/replace":{"post":{"tags":["RawDataset"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"RawDataset.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false}},"/RawDatasets/findOne":{"get":{"tags":["RawDataset"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"RawDataset.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false}},"/RawDatasets/update":{"post":{"tags":["RawDataset"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"RawDataset.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets/count":{"get":{"tags":["RawDataset"],"summary":"Count instances of the model matched by where from the data source.","operationId":"RawDataset.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets/change-stream":{"post":{"tags":["RawDataset"],"summary":"Create a change stream.","operationId":"RawDataset.createChangeStream__post_RawDatasets_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["RawDataset"],"summary":"Create a change stream.","operationId":"RawDataset.createChangeStream__get_RawDatasets_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/RawDatasets/isValid":{"post":{"tags":["RawDataset"],"summary":"Check if data is valid according to a schema","operationId":"RawDataset.isValid","parameters":[{"name":"ownableItem","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/RawDatasets/resetArchiveStatus":{"put":{"tags":["RawDataset"],"summary":"Reset archive status by deleting created datablocks of dataset and resetting  archiveStatusMessage and archivable flag.","operationId":"RawDataset.reset","parameters":[{"name":"datasetId","in":"formData","required":false,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/RawDatasets/fullfacet":{"get":{"tags":["RawDataset"],"summary":"Return facet counts relevant for the given selected subset of datasets. ","operationId":"RawDataset.fullfacet","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name and values of fields. There ia also support for a `text` search to look for strngs anywhere in the dataset.","required":false,"type":"string","format":"JSON"},{"name":"facets","in":"query","description":"Defines list of field names, for which facet counts should be calculated","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/RawDatasets/fullquery":{"get":{"tags":["RawDataset"],"summary":"Return datasets fulfilling complex filter conditions, including from fields of joined models.","operationId":"RawDataset.fullquery","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name of values of fields requested. There ia also support for a `text` search to look for strings anywhere in the dataset. Skip and limit parameters allow for paging.","required":false,"type":"string","format":"JSON"},{"name":"limits","in":"query","description":"Define further query parameters like skip, limit, order","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/RawDatasets/anonymousquery":{"get":{"tags":["RawDataset"],"summary":"Return datasets fulfilling complex filter conditions, including from fields of joined models.","operationId":"RawDataset.anonymousquery","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name of values of fields requested. There ia also support for a `text` search to look for strings anywhere in the dataset. Skip and limit parameters allow for paging.","required":false,"type":"string","format":"JSON"},{"name":"limits","in":"query","description":"Define further query parameters like skip, limit, order","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/DerivedDatasets/{id}/samples/{fk}":{"get":{"tags":["DerivedDataset"],"summary":"Find a related item by id for samples.","operationId":"DerivedDataset.prototype.__findById__samples","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for samples","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Delete a related item by id for samples.","operationId":"DerivedDataset.prototype.__destroyById__samples","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for samples","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Update a related item by id for samples.","operationId":"DerivedDataset.prototype.__updateById__samples","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for samples","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/DerivedDatasets/{id}/publisheddata":{"get":{"tags":["DerivedDataset"],"summary":"Fetches belongsTo relation publisheddata.","operationId":"DerivedDataset.prototype.__get__publisheddata","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false}},"/DerivedDatasets/{id}/datasetLifecycle":{"get":{"tags":["DerivedDataset"],"summary":"Fetches hasOne relation datasetLifecycle.","operationId":"DerivedDataset.prototype.__get__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"post":{"tags":["DerivedDataset"],"summary":"Creates a new instance in datasetLifecycle of this model.","operationId":"DerivedDataset.prototype.__create__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Update datasetLifecycle of this model.","operationId":"DerivedDataset.prototype.__update__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Deletes datasetLifecycle of this model.","operationId":"DerivedDataset.prototype.__destroy__datasetLifecycle","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/DerivedDatasets/{id}/datablocks/{fk}":{"get":{"tags":["DerivedDataset"],"summary":"Find a related item by id for datablocks.","operationId":"DerivedDataset.prototype.__findById__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Delete a related item by id for datablocks.","operationId":"DerivedDataset.prototype.__destroyById__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Update a related item by id for datablocks.","operationId":"DerivedDataset.prototype.__updateById__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/DerivedDatasets/{id}/origdatablocks/{fk}":{"get":{"tags":["DerivedDataset"],"summary":"Find a related item by id for origdatablocks.","operationId":"DerivedDataset.prototype.__findById__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Delete a related item by id for origdatablocks.","operationId":"DerivedDataset.prototype.__destroyById__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Update a related item by id for origdatablocks.","operationId":"DerivedDataset.prototype.__updateById__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/DerivedDatasets/{id}/historyList/{fk}":{"get":{"tags":["DerivedDataset"],"summary":"Find a related item by id for historyList.","operationId":"DerivedDataset.prototype.__findById__historyList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for historyList","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Message"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Delete a related item by id for historyList.","operationId":"DerivedDataset.prototype.__destroyById__historyList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for historyList","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Update a related item by id for historyList.","operationId":"DerivedDataset.prototype.__updateById__historyList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for historyList","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Message"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Message"}}},"deprecated":false}},"/DerivedDatasets/{id}/attachments/{fk}":{"get":{"tags":["DerivedDataset"],"summary":"Find a related item by id for attachments.","operationId":"DerivedDataset.prototype.__findById__attachments","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Delete a related item by id for attachments.","operationId":"DerivedDataset.prototype.__destroyById__attachments","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Update a related item by id for attachments.","operationId":"DerivedDataset.prototype.__updateById__attachments","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false}},"/DerivedDatasets/{id}/instrument":{"get":{"tags":["DerivedDataset"],"summary":"Fetches belongsTo relation instrument.","operationId":"DerivedDataset.prototype.__get__instrument","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false}},"/DerivedDatasets/{id}/techniquesList/{fk}":{"get":{"tags":["DerivedDataset"],"summary":"Find a related item by id for techniquesList.","operationId":"DerivedDataset.prototype.__findById__techniquesList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for techniquesList","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Technique"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Delete a related item by id for techniquesList.","operationId":"DerivedDataset.prototype.__destroyById__techniquesList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for techniquesList","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Update a related item by id for techniquesList.","operationId":"DerivedDataset.prototype.__updateById__techniquesList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for techniquesList","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Technique"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Technique"}}},"deprecated":false}},"/DerivedDatasets/{id}/samples":{"get":{"tags":["DerivedDataset"],"summary":"Queries samples of DerivedDataset.","operationId":"DerivedDataset.prototype.__get__samples","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Sample"}}}},"deprecated":false},"post":{"tags":["DerivedDataset"],"summary":"Creates a new instance in samples of this model.","operationId":"DerivedDataset.prototype.__create__samples","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Deletes all samples of this model.","operationId":"DerivedDataset.prototype.__delete__samples","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/DerivedDatasets/{id}/samples/count":{"get":{"tags":["DerivedDataset"],"summary":"Counts samples of DerivedDataset.","operationId":"DerivedDataset.prototype.__count__samples","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets/{id}/datablocks":{"get":{"tags":["DerivedDataset"],"summary":"Queries datablocks of DerivedDataset.","operationId":"DerivedDataset.prototype.__get__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Datablock"}}}},"deprecated":false},"post":{"tags":["DerivedDataset"],"summary":"Creates a new instance in datablocks of this model.","operationId":"DerivedDataset.prototype.__create__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Deletes all datablocks of this model.","operationId":"DerivedDataset.prototype.__delete__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/DerivedDatasets/{id}/datablocks/count":{"get":{"tags":["DerivedDataset"],"summary":"Counts datablocks of DerivedDataset.","operationId":"DerivedDataset.prototype.__count__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets/{id}/origdatablocks":{"get":{"tags":["DerivedDataset"],"summary":"Queries origdatablocks of DerivedDataset.","operationId":"DerivedDataset.prototype.__get__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/OrigDatablock"}}}},"deprecated":false},"post":{"tags":["DerivedDataset"],"summary":"Creates a new instance in origdatablocks of this model.","operationId":"DerivedDataset.prototype.__create__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Deletes all origdatablocks of this model.","operationId":"DerivedDataset.prototype.__delete__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/DerivedDatasets/{id}/origdatablocks/count":{"get":{"tags":["DerivedDataset"],"summary":"Counts origdatablocks of DerivedDataset.","operationId":"DerivedDataset.prototype.__count__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets/{id}/historyList":{"get":{"tags":["DerivedDataset"],"summary":"Queries historyList of DerivedDataset.","operationId":"DerivedDataset.prototype.__get__historyList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Message"}}}},"deprecated":false},"post":{"tags":["DerivedDataset"],"summary":"Creates a new instance in historyList of this model.","operationId":"DerivedDataset.prototype.__create__historyList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Message"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Message"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Deletes all historyList of this model.","operationId":"DerivedDataset.prototype.__delete__historyList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/DerivedDatasets/{id}/historyList/count":{"get":{"tags":["DerivedDataset"],"summary":"Counts historyList of DerivedDataset.","operationId":"DerivedDataset.prototype.__count__historyList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets/{id}/attachments":{"get":{"tags":["DerivedDataset"],"summary":"Queries attachments of DerivedDataset.","operationId":"DerivedDataset.prototype.__get__attachments","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Attachment"}}}},"deprecated":false},"post":{"tags":["DerivedDataset"],"summary":"Creates a new instance in attachments of this model.","operationId":"DerivedDataset.prototype.__create__attachments","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Deletes all attachments of this model.","operationId":"DerivedDataset.prototype.__delete__attachments","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/DerivedDatasets/{id}/attachments/count":{"get":{"tags":["DerivedDataset"],"summary":"Counts attachments of DerivedDataset.","operationId":"DerivedDataset.prototype.__count__attachments","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets/{id}/techniquesList":{"get":{"tags":["DerivedDataset"],"summary":"Queries techniquesList of DerivedDataset.","operationId":"DerivedDataset.prototype.__get__techniquesList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Technique"}}}},"deprecated":false},"post":{"tags":["DerivedDataset"],"summary":"Creates a new instance in techniquesList of this model.","operationId":"DerivedDataset.prototype.__create__techniquesList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Technique"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Technique"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Deletes all techniquesList of this model.","operationId":"DerivedDataset.prototype.__delete__techniquesList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/DerivedDatasets/{id}/techniquesList/count":{"get":{"tags":["DerivedDataset"],"summary":"Counts techniquesList of DerivedDataset.","operationId":"DerivedDataset.prototype.__count__techniquesList","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets":{"post":{"tags":["DerivedDataset"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"DerivedDataset.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DerivedDataset.patchOrCreate__put_DerivedDatasets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false},"patch":{"tags":["DerivedDataset"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DerivedDataset.patchOrCreate__patch_DerivedDatasets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false},"get":{"tags":["DerivedDataset"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"DerivedDataset.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/DerivedDataset"}}}},"deprecated":false}},"/DerivedDatasets/replaceOrCreate":{"post":{"tags":["DerivedDataset"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DerivedDataset.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false}},"/DerivedDatasets/upsertWithWhere":{"post":{"tags":["DerivedDataset"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"DerivedDataset.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false}},"/DerivedDatasets/{id}/exists":{"get":{"tags":["DerivedDataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"DerivedDataset.exists__get_DerivedDatasets_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/DerivedDatasets/{id}":{"head":{"tags":["DerivedDataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"DerivedDataset.exists__head_DerivedDatasets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["DerivedDataset"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"DerivedDataset.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"DerivedDataset.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DerivedDataset.prototype.patchAttributes__put_DerivedDatasets_{id}","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false},"patch":{"tags":["DerivedDataset"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DerivedDataset.prototype.patchAttributes__patch_DerivedDatasets_{id}","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false}},"/DerivedDatasets/{id}/replace":{"post":{"tags":["DerivedDataset"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DerivedDataset.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false}},"/DerivedDatasets/findOne":{"get":{"tags":["DerivedDataset"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"DerivedDataset.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false}},"/DerivedDatasets/update":{"post":{"tags":["DerivedDataset"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"DerivedDataset.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets/count":{"get":{"tags":["DerivedDataset"],"summary":"Count instances of the model matched by where from the data source.","operationId":"DerivedDataset.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets/change-stream":{"post":{"tags":["DerivedDataset"],"summary":"Create a change stream.","operationId":"DerivedDataset.createChangeStream__post_DerivedDatasets_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["DerivedDataset"],"summary":"Create a change stream.","operationId":"DerivedDataset.createChangeStream__get_DerivedDatasets_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/DerivedDatasets/isValid":{"post":{"tags":["DerivedDataset"],"summary":"Check if data is valid according to a schema","operationId":"DerivedDataset.isValid","parameters":[{"name":"ownableItem","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/DerivedDatasets/resetArchiveStatus":{"put":{"tags":["DerivedDataset"],"summary":"Reset archive status by deleting created datablocks of dataset and resetting  archiveStatusMessage and archivable flag.","operationId":"DerivedDataset.reset","parameters":[{"name":"datasetId","in":"formData","required":false,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/DerivedDatasets/fullfacet":{"get":{"tags":["DerivedDataset"],"summary":"Return facet counts relevant for the given selected subset of datasets. ","operationId":"DerivedDataset.fullfacet","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name and values of fields. There ia also support for a `text` search to look for strngs anywhere in the dataset.","required":false,"type":"string","format":"JSON"},{"name":"facets","in":"query","description":"Defines list of field names, for which facet counts should be calculated","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/DerivedDatasets/fullquery":{"get":{"tags":["DerivedDataset"],"summary":"Return datasets fulfilling complex filter conditions, including from fields of joined models.","operationId":"DerivedDataset.fullquery","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name of values of fields requested. There ia also support for a `text` search to look for strings anywhere in the dataset. Skip and limit parameters allow for paging.","required":false,"type":"string","format":"JSON"},{"name":"limits","in":"query","description":"Define further query parameters like skip, limit, order","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/DerivedDatasets/anonymousquery":{"get":{"tags":["DerivedDataset"],"summary":"Return datasets fulfilling complex filter conditions, including from fields of joined models.","operationId":"DerivedDataset.anonymousquery","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name of values of fields requested. There ia also support for a `text` search to look for strings anywhere in the dataset. Skip and limit parameters allow for paging.","required":false,"type":"string","format":"JSON"},{"name":"limits","in":"query","description":"Define further query parameters like skip, limit, order","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Samples/{id}/datasets":{"get":{"tags":["Sample"],"summary":"Fetches belongsTo relation datasets.","operationId":"Sample.prototype.__get__datasets","parameters":[{"name":"id","in":"path","description":"Sample id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Samples/{id}/attachments/{fk}":{"get":{"tags":["Sample"],"summary":"Find a related item by id for attachments.","operationId":"Sample.prototype.__findById__attachments","parameters":[{"name":"id","in":"path","description":"Sample id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["Sample"],"summary":"Delete a related item by id for attachments.","operationId":"Sample.prototype.__destroyById__attachments","parameters":[{"name":"id","in":"path","description":"Sample id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Sample"],"summary":"Update a related item by id for attachments.","operationId":"Sample.prototype.__updateById__attachments","parameters":[{"name":"id","in":"path","description":"Sample id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false}},"/Samples/{id}/attachments":{"get":{"tags":["Sample"],"summary":"Queries attachments of Sample.","operationId":"Sample.prototype.__get__attachments","parameters":[{"name":"id","in":"path","description":"Sample id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Attachment"}}}},"deprecated":false},"post":{"tags":["Sample"],"summary":"Creates a new instance in attachments of this model.","operationId":"Sample.prototype.__create__attachments","parameters":[{"name":"id","in":"path","description":"Sample id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["Sample"],"summary":"Deletes all attachments of this model.","operationId":"Sample.prototype.__delete__attachments","parameters":[{"name":"id","in":"path","description":"Sample id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Samples/{id}/attachments/count":{"get":{"tags":["Sample"],"summary":"Counts attachments of Sample.","operationId":"Sample.prototype.__count__attachments","parameters":[{"name":"id","in":"path","description":"Sample id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Samples":{"post":{"tags":["Sample"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Sample.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"patch":{"tags":["Sample"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Sample.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"put":{"tags":["Sample"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Sample.replaceOrCreate__put_Samples","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"get":{"tags":["Sample"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Sample.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Sample"}}}},"deprecated":false}},"/Samples/replaceOrCreate":{"post":{"tags":["Sample"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Sample.replaceOrCreate__post_Samples_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Samples/upsertWithWhere":{"post":{"tags":["Sample"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Sample.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Samples/{id}/exists":{"get":{"tags":["Sample"],"summary":"Check whether a model instance exists in the data source.","operationId":"Sample.exists__get_Samples_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Samples/{id}":{"head":{"tags":["Sample"],"summary":"Check whether a model instance exists in the data source.","operationId":"Sample.exists__head_Samples_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Sample"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Sample.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"put":{"tags":["Sample"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Sample.replaceById__put_Samples_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"delete":{"tags":["Sample"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Sample.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Sample"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Sample.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Sample id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Samples/{id}/replace":{"post":{"tags":["Sample"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Sample.replaceById__post_Samples_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Samples/findOne":{"get":{"tags":["Sample"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Sample.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Samples/update":{"post":{"tags":["Sample"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Sample.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Samples/count":{"get":{"tags":["Sample"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Sample.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Samples/change-stream":{"post":{"tags":["Sample"],"summary":"Create a change stream.","operationId":"Sample.createChangeStream__post_Samples_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Sample"],"summary":"Create a change stream.","operationId":"Sample.createChangeStream__get_Samples_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Samples/isValid":{"post":{"tags":["Sample"],"summary":"Check if data is valid according to a schema","operationId":"Sample.isValid","parameters":[{"name":"ownableItem","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Samples/fullquery":{"get":{"tags":["Sample"],"summary":"Return samples fulfilling complex filter conditions, including from fields of joined models.","operationId":"Sample.fullquery","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name of values of fields requested. There is also support for a `text` search to look for strings anywhere in the sample. Skip and limit parameters allow for paging.","required":false,"type":"string","format":"JSON"},{"name":"limits","in":"query","description":"Define further query parameters like skip, limit, order","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Proposals/{id}/measurementPeriods/{fk}":{"get":{"tags":["Proposal"],"summary":"Find a related item by id for measurementPeriods.","operationId":"Proposal.prototype.__findById__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for measurementPeriods","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MeasurementPeriod"}}},"deprecated":false},"delete":{"tags":["Proposal"],"summary":"Delete a related item by id for measurementPeriods.","operationId":"Proposal.prototype.__destroyById__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for measurementPeriods","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Proposal"],"summary":"Update a related item by id for measurementPeriods.","operationId":"Proposal.prototype.__updateById__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for measurementPeriods","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/MeasurementPeriod"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MeasurementPeriod"}}},"deprecated":false}},"/Proposals/{id}/attachments/{fk}":{"get":{"tags":["Proposal"],"summary":"Find a related item by id for attachments.","operationId":"Proposal.prototype.__findById__attachments","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["Proposal"],"summary":"Delete a related item by id for attachments.","operationId":"Proposal.prototype.__destroyById__attachments","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Proposal"],"summary":"Update a related item by id for attachments.","operationId":"Proposal.prototype.__updateById__attachments","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for attachments","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false}},"/Proposals/{id}/measurementPeriods":{"get":{"tags":["Proposal"],"summary":"Queries measurementPeriods of Proposal.","operationId":"Proposal.prototype.__get__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/MeasurementPeriod"}}}},"deprecated":false},"post":{"tags":["Proposal"],"summary":"Creates a new instance in measurementPeriods of this model.","operationId":"Proposal.prototype.__create__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/MeasurementPeriod"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MeasurementPeriod"}}},"deprecated":false},"delete":{"tags":["Proposal"],"summary":"Deletes all measurementPeriods of this model.","operationId":"Proposal.prototype.__delete__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Proposals/{id}/measurementPeriods/count":{"get":{"tags":["Proposal"],"summary":"Counts measurementPeriods of Proposal.","operationId":"Proposal.prototype.__count__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Proposals/{id}/attachments":{"get":{"tags":["Proposal"],"summary":"Queries attachments of Proposal.","operationId":"Proposal.prototype.__get__attachments","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Attachment"}}}},"deprecated":false},"post":{"tags":["Proposal"],"summary":"Creates a new instance in attachments of this model.","operationId":"Proposal.prototype.__create__attachments","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["Proposal"],"summary":"Deletes all attachments of this model.","operationId":"Proposal.prototype.__delete__attachments","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Proposals/{id}/attachments/count":{"get":{"tags":["Proposal"],"summary":"Counts attachments of Proposal.","operationId":"Proposal.prototype.__count__attachments","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Proposals":{"post":{"tags":["Proposal"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Proposal.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false},"patch":{"tags":["Proposal"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Proposal.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false},"put":{"tags":["Proposal"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Proposal.replaceOrCreate__put_Proposals","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false},"get":{"tags":["Proposal"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Proposal.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Proposal"}}}},"deprecated":false}},"/Proposals/replaceOrCreate":{"post":{"tags":["Proposal"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Proposal.replaceOrCreate__post_Proposals_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Proposals/upsertWithWhere":{"post":{"tags":["Proposal"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Proposal.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Proposals/{id}/exists":{"get":{"tags":["Proposal"],"summary":"Check whether a model instance exists in the data source.","operationId":"Proposal.exists__get_Proposals_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Proposals/{id}":{"head":{"tags":["Proposal"],"summary":"Check whether a model instance exists in the data source.","operationId":"Proposal.exists__head_Proposals_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Proposal"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Proposal.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false},"put":{"tags":["Proposal"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Proposal.replaceById__put_Proposals_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false},"delete":{"tags":["Proposal"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Proposal.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Proposal"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Proposal.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Proposals/{id}/replace":{"post":{"tags":["Proposal"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Proposal.replaceById__post_Proposals_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Proposals/findOne":{"get":{"tags":["Proposal"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Proposal.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Proposals/update":{"post":{"tags":["Proposal"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Proposal.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Proposals/count":{"get":{"tags":["Proposal"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Proposal.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Proposals/change-stream":{"post":{"tags":["Proposal"],"summary":"Create a change stream.","operationId":"Proposal.createChangeStream__post_Proposals_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Proposal"],"summary":"Create a change stream.","operationId":"Proposal.createChangeStream__get_Proposals_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Proposals/isValid":{"post":{"tags":["Proposal"],"summary":"Check if data is valid according to a schema","operationId":"Proposal.isValid","parameters":[{"name":"ownableItem","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Proposals/findByInstrumentAndDate":{"get":{"tags":["Proposal"],"summary":"Find proposal that took data at specified instrument and time","operationId":"Proposal.findByInstrumentAndDate","parameters":[{"name":"instrument","in":"query","required":false,"type":"string"},{"name":"measureTime","in":"query","required":false,"type":"string","format":"date-time"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"findByInstrumentAndDate":{"type":"object"}}}}},"deprecated":false}},"/Proposals/searchText":{"get":{"tags":["Proposal"],"summary":"Search text inside proposal","operationId":"Proposal.searchText","parameters":[],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"searchText":{"type":"object"}}}}},"deprecated":false}},"/Proposals/fullquery":{"get":{"tags":["Proposal"],"summary":"Return proposals fulfilling complex filter conditions, including from fields of joined models.","operationId":"Proposal.fullquery","parameters":[{"name":"fields","in":"query","description":"Define the filter conditions by specifying the name of values of fields requested. There is also support for a `text` search to look for strings anywhere in the proposal. Skip and limit parameters allow for paging.","required":false,"type":"string","format":"JSON"},{"name":"limits","in":"query","description":"Define further query parameters like skip, limit, order","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/PublishedData/{id}/datasets/{fk}":{"get":{"tags":["PublishedData"],"summary":"Find a related item by id for datasets.","operationId":"PublishedData.prototype.__findById__datasets","parameters":[{"name":"id","in":"path","description":"PublishedData id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datasets","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"delete":{"tags":["PublishedData"],"summary":"Delete a related item by id for datasets.","operationId":"PublishedData.prototype.__destroyById__datasets","parameters":[{"name":"id","in":"path","description":"PublishedData id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datasets","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["PublishedData"],"summary":"Update a related item by id for datasets.","operationId":"PublishedData.prototype.__updateById__datasets","parameters":[{"name":"id","in":"path","description":"PublishedData id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datasets","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/PublishedData/{id}/datasets":{"get":{"tags":["PublishedData"],"summary":"Queries datasets of PublishedData.","operationId":"PublishedData.prototype.__get__datasets","parameters":[{"name":"id","in":"path","description":"PublishedData id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Dataset"}}}},"deprecated":false},"post":{"tags":["PublishedData"],"summary":"Creates a new instance in datasets of this model.","operationId":"PublishedData.prototype.__create__datasets","parameters":[{"name":"id","in":"path","description":"PublishedData id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"delete":{"tags":["PublishedData"],"summary":"Deletes all datasets of this model.","operationId":"PublishedData.prototype.__delete__datasets","parameters":[{"name":"id","in":"path","description":"PublishedData id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/PublishedData/{id}/datasets/count":{"get":{"tags":["PublishedData"],"summary":"Counts datasets of PublishedData.","operationId":"PublishedData.prototype.__count__datasets","parameters":[{"name":"id","in":"path","description":"PublishedData id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/PublishedData":{"post":{"tags":["PublishedData"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"PublishedData.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PublishedData"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false},"patch":{"tags":["PublishedData"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"PublishedData.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PublishedData"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false},"put":{"tags":["PublishedData"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"PublishedData.replaceOrCreate__put_PublishedData","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PublishedData"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false},"get":{"tags":["PublishedData"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"PublishedData.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/PublishedData"}}}},"deprecated":false}},"/PublishedData/replaceOrCreate":{"post":{"tags":["PublishedData"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"PublishedData.replaceOrCreate__post_PublishedData_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PublishedData"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false}},"/PublishedData/upsertWithWhere":{"post":{"tags":["PublishedData"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"PublishedData.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/PublishedData"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false}},"/PublishedData/{id}/exists":{"get":{"tags":["PublishedData"],"summary":"Check whether a model instance exists in the data source.","operationId":"PublishedData.exists__get_PublishedData_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/PublishedData/{id}":{"head":{"tags":["PublishedData"],"summary":"Check whether a model instance exists in the data source.","operationId":"PublishedData.exists__head_PublishedData_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["PublishedData"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"PublishedData.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false},"put":{"tags":["PublishedData"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"PublishedData.replaceById__put_PublishedData_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PublishedData"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false},"delete":{"tags":["PublishedData"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"PublishedData.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["PublishedData"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"PublishedData.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"PublishedData id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/PublishedData"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false}},"/PublishedData/{id}/replace":{"post":{"tags":["PublishedData"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"PublishedData.replaceById__post_PublishedData_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PublishedData"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false}},"/PublishedData/findOne":{"get":{"tags":["PublishedData"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"PublishedData.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PublishedData"}}},"deprecated":false}},"/PublishedData/update":{"post":{"tags":["PublishedData"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"PublishedData.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/PublishedData"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/PublishedData/count":{"get":{"tags":["PublishedData"],"summary":"Count instances of the model matched by where from the data source.","operationId":"PublishedData.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/PublishedData/change-stream":{"post":{"tags":["PublishedData"],"summary":"Create a change stream.","operationId":"PublishedData.createChangeStream__post_PublishedData_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["PublishedData"],"summary":"Create a change stream.","operationId":"PublishedData.createChangeStream__get_PublishedData_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/PublishedData/formPopulate":{"get":{"tags":["PublishedData"],"operationId":"PublishedData.formPopulate","parameters":[{"name":"pid","in":"query","required":true,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/PublishedData/{id}/register":{"post":{"tags":["PublishedData"],"operationId":"PublishedData.register","parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"doi":{"type":"string"}}}}},"deprecated":false}},"/PublishedData/{id}/resync":{"post":{"tags":["PublishedData"],"operationId":"PublishedData.resync","parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"data","in":"body","required":true,"schema":{"$ref":"#/definitions/PublishedData"}}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"doi":{"type":"string"}}}}},"deprecated":false}},"/Datablocks/{id}/dataset":{"get":{"tags":["Datablock"],"summary":"Fetches belongsTo relation dataset.","operationId":"Datablock.prototype.__get__dataset","parameters":[{"name":"id","in":"path","description":"Datablock id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datablocks":{"post":{"tags":["Datablock"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Datablock.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"patch":{"tags":["Datablock"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Datablock.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"put":{"tags":["Datablock"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Datablock.replaceOrCreate__put_Datablocks","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"get":{"tags":["Datablock"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Datablock.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Datablock"}}}},"deprecated":false}},"/Datablocks/replaceOrCreate":{"post":{"tags":["Datablock"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Datablock.replaceOrCreate__post_Datablocks_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datablocks/upsertWithWhere":{"post":{"tags":["Datablock"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Datablock.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datablocks/{id}/exists":{"get":{"tags":["Datablock"],"summary":"Check whether a model instance exists in the data source.","operationId":"Datablock.exists__get_Datablocks_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Datablocks/{id}":{"head":{"tags":["Datablock"],"summary":"Check whether a model instance exists in the data source.","operationId":"Datablock.exists__head_Datablocks_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Datablock"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Datablock.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"put":{"tags":["Datablock"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Datablock.replaceById__put_Datablocks_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["Datablock"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Datablock.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Datablock"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Datablock.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Datablock id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datablocks/{id}/replace":{"post":{"tags":["Datablock"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Datablock.replaceById__post_Datablocks_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datablocks/findOne":{"get":{"tags":["Datablock"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Datablock.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datablocks/update":{"post":{"tags":["Datablock"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Datablock.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Datablocks/count":{"get":{"tags":["Datablock"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Datablock.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datablocks/change-stream":{"post":{"tags":["Datablock"],"summary":"Create a change stream.","operationId":"Datablock.createChangeStream__post_Datablocks_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Datablock"],"summary":"Create a change stream.","operationId":"Datablock.createChangeStream__get_Datablocks_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Datablocks/isValid":{"post":{"tags":["Datablock"],"summary":"Check if data is valid according to a schema","operationId":"Datablock.isValid","parameters":[{"name":"ownableItem","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/UserCredentials/{id}/user":{"get":{"tags":["UserCredential"],"summary":"Fetches belongsTo relation user.","operationId":"UserCredential.prototype.__get__user","parameters":[{"name":"id","in":"path","description":"UserCredential id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/UserCredentials":{"post":{"tags":["UserCredential"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"UserCredential.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"patch":{"tags":["UserCredential"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"UserCredential.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"put":{"tags":["UserCredential"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UserCredential.replaceOrCreate__put_UserCredentials","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"get":{"tags":["UserCredential"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"UserCredential.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/UserCredential"}}}},"deprecated":false}},"/UserCredentials/replaceOrCreate":{"post":{"tags":["UserCredential"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UserCredential.replaceOrCreate__post_UserCredentials_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/UserCredentials/upsertWithWhere":{"post":{"tags":["UserCredential"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"UserCredential.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/UserCredentials/{id}/exists":{"get":{"tags":["UserCredential"],"summary":"Check whether a model instance exists in the data source.","operationId":"UserCredential.exists__get_UserCredentials_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/UserCredentials/{id}":{"head":{"tags":["UserCredential"],"summary":"Check whether a model instance exists in the data source.","operationId":"UserCredential.exists__head_UserCredentials_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["UserCredential"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"UserCredential.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"put":{"tags":["UserCredential"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UserCredential.replaceById__put_UserCredentials_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"delete":{"tags":["UserCredential"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"UserCredential.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["UserCredential"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"UserCredential.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"UserCredential id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/UserCredentials/{id}/replace":{"post":{"tags":["UserCredential"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UserCredential.replaceById__post_UserCredentials_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/UserCredentials/findOne":{"get":{"tags":["UserCredential"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"UserCredential.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/UserCredentials/update":{"post":{"tags":["UserCredential"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"UserCredential.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/UserCredentials/count":{"get":{"tags":["UserCredential"],"summary":"Count instances of the model matched by where from the data source.","operationId":"UserCredential.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/UserCredentials/change-stream":{"post":{"tags":["UserCredential"],"summary":"Create a change stream.","operationId":"UserCredential.createChangeStream__post_UserCredentials_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["UserCredential"],"summary":"Create a change stream.","operationId":"UserCredential.createChangeStream__get_UserCredentials_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/UserIdentities/{id}/user":{"get":{"tags":["UserIdentity"],"summary":"Fetches belongsTo relation user.","operationId":"UserIdentity.prototype.__get__user","parameters":[{"name":"id","in":"path","description":"UserIdentity id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/UserIdentities":{"post":{"tags":["UserIdentity"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"UserIdentity.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"patch":{"tags":["UserIdentity"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"UserIdentity.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"put":{"tags":["UserIdentity"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UserIdentity.replaceOrCreate__put_UserIdentities","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"get":{"tags":["UserIdentity"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"UserIdentity.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/UserIdentity"}}}},"deprecated":false}},"/UserIdentities/replaceOrCreate":{"post":{"tags":["UserIdentity"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UserIdentity.replaceOrCreate__post_UserIdentities_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/UserIdentities/upsertWithWhere":{"post":{"tags":["UserIdentity"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"UserIdentity.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/UserIdentities/{id}/exists":{"get":{"tags":["UserIdentity"],"summary":"Check whether a model instance exists in the data source.","operationId":"UserIdentity.exists__get_UserIdentities_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/UserIdentities/{id}":{"head":{"tags":["UserIdentity"],"summary":"Check whether a model instance exists in the data source.","operationId":"UserIdentity.exists__head_UserIdentities_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["UserIdentity"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"UserIdentity.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"put":{"tags":["UserIdentity"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UserIdentity.replaceById__put_UserIdentities_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"delete":{"tags":["UserIdentity"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"UserIdentity.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["UserIdentity"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"UserIdentity.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"UserIdentity id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/UserIdentities/{id}/replace":{"post":{"tags":["UserIdentity"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UserIdentity.replaceById__post_UserIdentities_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/UserIdentities/findOne":{"get":{"tags":["UserIdentity"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"UserIdentity.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/UserIdentities/update":{"post":{"tags":["UserIdentity"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"UserIdentity.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/UserIdentities/count":{"get":{"tags":["UserIdentity"],"summary":"Count instances of the model matched by where from the data source.","operationId":"UserIdentity.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/UserIdentities/change-stream":{"post":{"tags":["UserIdentity"],"summary":"Create a change stream.","operationId":"UserIdentity.createChangeStream__post_UserIdentities_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["UserIdentity"],"summary":"Create a change stream.","operationId":"UserIdentity.createChangeStream__get_UserIdentities_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/ApplicationCredentials":{"post":{"tags":["ApplicationCredential"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"ApplicationCredential.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false},"patch":{"tags":["ApplicationCredential"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"ApplicationCredential.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false},"put":{"tags":["ApplicationCredential"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"ApplicationCredential.replaceOrCreate__put_ApplicationCredentials","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false},"get":{"tags":["ApplicationCredential"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"ApplicationCredential.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/ApplicationCredential"}}}},"deprecated":false}},"/ApplicationCredentials/replaceOrCreate":{"post":{"tags":["ApplicationCredential"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"ApplicationCredential.replaceOrCreate__post_ApplicationCredentials_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false}},"/ApplicationCredentials/upsertWithWhere":{"post":{"tags":["ApplicationCredential"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"ApplicationCredential.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false}},"/ApplicationCredentials/{id}/exists":{"get":{"tags":["ApplicationCredential"],"summary":"Check whether a model instance exists in the data source.","operationId":"ApplicationCredential.exists__get_ApplicationCredentials_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/ApplicationCredentials/{id}":{"head":{"tags":["ApplicationCredential"],"summary":"Check whether a model instance exists in the data source.","operationId":"ApplicationCredential.exists__head_ApplicationCredentials_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["ApplicationCredential"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"ApplicationCredential.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false},"put":{"tags":["ApplicationCredential"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"ApplicationCredential.replaceById__put_ApplicationCredentials_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false},"delete":{"tags":["ApplicationCredential"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"ApplicationCredential.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["ApplicationCredential"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"ApplicationCredential.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"ApplicationCredential id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false}},"/ApplicationCredentials/{id}/replace":{"post":{"tags":["ApplicationCredential"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"ApplicationCredential.replaceById__post_ApplicationCredentials_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false}},"/ApplicationCredentials/findOne":{"get":{"tags":["ApplicationCredential"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"ApplicationCredential.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false}},"/ApplicationCredentials/update":{"post":{"tags":["ApplicationCredential"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"ApplicationCredential.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/ApplicationCredentials/count":{"get":{"tags":["ApplicationCredential"],"summary":"Count instances of the model matched by where from the data source.","operationId":"ApplicationCredential.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/ApplicationCredentials/change-stream":{"post":{"tags":["ApplicationCredential"],"summary":"Create a change stream.","operationId":"ApplicationCredential.createChangeStream__post_ApplicationCredentials_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["ApplicationCredential"],"summary":"Create a change stream.","operationId":"ApplicationCredential.createChangeStream__get_ApplicationCredentials_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Policies":{"post":{"tags":["Policy"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Policy.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false},"patch":{"tags":["Policy"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Policy.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false},"put":{"tags":["Policy"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Policy.replaceOrCreate__put_Policies","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false},"get":{"tags":["Policy"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Policy.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Policy"}}}},"deprecated":false}},"/Policies/replaceOrCreate":{"post":{"tags":["Policy"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Policy.replaceOrCreate__post_Policies_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false}},"/Policies/upsertWithWhere":{"post":{"tags":["Policy"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Policy.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false}},"/Policies/{id}/exists":{"get":{"tags":["Policy"],"summary":"Check whether a model instance exists in the data source.","operationId":"Policy.exists__get_Policies_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Policies/{id}":{"head":{"tags":["Policy"],"summary":"Check whether a model instance exists in the data source.","operationId":"Policy.exists__head_Policies_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Policy"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Policy.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false},"put":{"tags":["Policy"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Policy.replaceById__put_Policies_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false},"delete":{"tags":["Policy"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Policy.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Policy"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Policy.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Policy id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false}},"/Policies/{id}/replace":{"post":{"tags":["Policy"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Policy.replaceById__post_Policies_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false}},"/Policies/findOne":{"get":{"tags":["Policy"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Policy.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false}},"/Policies/update":{"post":{"tags":["Policy"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Policy.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Policies/count":{"get":{"tags":["Policy"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Policy.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Policies/change-stream":{"post":{"tags":["Policy"],"summary":"Create a change stream.","operationId":"Policy.createChangeStream__post_Policies_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Policy"],"summary":"Create a change stream.","operationId":"Policy.createChangeStream__get_Policies_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Policies/isValid":{"post":{"tags":["Policy"],"summary":"Check if data is valid according to a schema","operationId":"Policy.isValid","parameters":[{"name":"ownableItem","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Policies/updatewhere":{"post":{"tags":["Policy"],"summary":"updates multiple records on the Policy model and uses ownerGroup to identify those records","operationId":"Policy.updatewhere","parameters":[{"name":"ownerGroupList","in":"formData","description":"Comma-separated string of owner groups to update e.g. \"p14159, p24959\"","required":true,"type":"string"},{"name":"data","in":"formData","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/Jobs":{"post":{"tags":["Job"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Job.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false},"put":{"tags":["Job"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Job.patchOrCreate__put_Jobs","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false},"patch":{"tags":["Job"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Job.patchOrCreate__patch_Jobs","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false},"get":{"tags":["Job"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Job.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Job"}}}},"deprecated":false}},"/Jobs/replaceOrCreate":{"post":{"tags":["Job"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Job.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false}},"/Jobs/upsertWithWhere":{"post":{"tags":["Job"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Job.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false}},"/Jobs/{id}/exists":{"get":{"tags":["Job"],"summary":"Check whether a model instance exists in the data source.","operationId":"Job.exists__get_Jobs_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Jobs/{id}":{"head":{"tags":["Job"],"summary":"Check whether a model instance exists in the data source.","operationId":"Job.exists__head_Jobs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Job"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Job.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false},"delete":{"tags":["Job"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Job.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["Job"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Job.prototype.patchAttributes__put_Jobs_{id}","parameters":[{"name":"id","in":"path","description":"Job id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false},"patch":{"tags":["Job"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Job.prototype.patchAttributes__patch_Jobs_{id}","parameters":[{"name":"id","in":"path","description":"Job id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false}},"/Jobs/{id}/replace":{"post":{"tags":["Job"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Job.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false}},"/Jobs/findOne":{"get":{"tags":["Job"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Job.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false}},"/Jobs/update":{"post":{"tags":["Job"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Job.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Jobs/count":{"get":{"tags":["Job"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Job.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Jobs/change-stream":{"post":{"tags":["Job"],"summary":"Create a change stream.","operationId":"Job.createChangeStream__post_Jobs_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Job"],"summary":"Create a change stream.","operationId":"Job.createChangeStream__get_Jobs_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Jobs/datasetDetails":{"get":{"tags":["Job"],"summary":"Returns for all linked datasets the details as defined in the fields array. Useful to avoid URL size limititations for large dataset queries","operationId":"Job.datasetDetails","parameters":[{"name":"jobId","in":"query","required":false,"type":"string"},{"name":"datasetFields","in":"query","required":false,"type":"string","format":"JSON"},{"name":"include","in":"query","required":false,"type":"string","format":"JSON"},{"name":"includeFields","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/ShareGroups":{"post":{"tags":["ShareGroup"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"ShareGroup.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ShareGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ShareGroup"}}},"deprecated":false},"patch":{"tags":["ShareGroup"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"ShareGroup.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ShareGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ShareGroup"}}},"deprecated":false},"put":{"tags":["ShareGroup"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"ShareGroup.replaceOrCreate__put_ShareGroups","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ShareGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ShareGroup"}}},"deprecated":false},"get":{"tags":["ShareGroup"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"ShareGroup.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/ShareGroup"}}}},"deprecated":false}},"/ShareGroups/replaceOrCreate":{"post":{"tags":["ShareGroup"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"ShareGroup.replaceOrCreate__post_ShareGroups_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ShareGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ShareGroup"}}},"deprecated":false}},"/ShareGroups/upsertWithWhere":{"post":{"tags":["ShareGroup"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"ShareGroup.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ShareGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ShareGroup"}}},"deprecated":false}},"/ShareGroups/{id}/exists":{"get":{"tags":["ShareGroup"],"summary":"Check whether a model instance exists in the data source.","operationId":"ShareGroup.exists__get_ShareGroups_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/ShareGroups/{id}":{"head":{"tags":["ShareGroup"],"summary":"Check whether a model instance exists in the data source.","operationId":"ShareGroup.exists__head_ShareGroups_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["ShareGroup"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"ShareGroup.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ShareGroup"}}},"deprecated":false},"put":{"tags":["ShareGroup"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"ShareGroup.replaceById__put_ShareGroups_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ShareGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ShareGroup"}}},"deprecated":false},"delete":{"tags":["ShareGroup"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"ShareGroup.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["ShareGroup"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"ShareGroup.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"ShareGroup id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ShareGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ShareGroup"}}},"deprecated":false}},"/ShareGroups/{id}/replace":{"post":{"tags":["ShareGroup"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"ShareGroup.replaceById__post_ShareGroups_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ShareGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ShareGroup"}}},"deprecated":false}},"/ShareGroups/findOne":{"get":{"tags":["ShareGroup"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"ShareGroup.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ShareGroup"}}},"deprecated":false}},"/ShareGroups/update":{"post":{"tags":["ShareGroup"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"ShareGroup.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ShareGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/ShareGroups/count":{"get":{"tags":["ShareGroup"],"summary":"Count instances of the model matched by where from the data source.","operationId":"ShareGroup.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/ShareGroups/change-stream":{"post":{"tags":["ShareGroup"],"summary":"Create a change stream.","operationId":"ShareGroup.createChangeStream__post_ShareGroups_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["ShareGroup"],"summary":"Create a change stream.","operationId":"ShareGroup.createChangeStream__get_ShareGroups_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/ShareGroups/{id}/register":{"post":{"tags":["ShareGroup"],"operationId":"ShareGroup.getGroups","parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"groups":{"type":"object"}}}}},"deprecated":false}},"/OrigDatablocks/{id}/dataset":{"get":{"tags":["OrigDatablock"],"summary":"Fetches belongsTo relation dataset.","operationId":"OrigDatablock.prototype.__get__dataset","parameters":[{"name":"id","in":"path","description":"OrigDatablock id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/OrigDatablocks":{"post":{"tags":["OrigDatablock"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"OrigDatablock.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"patch":{"tags":["OrigDatablock"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"OrigDatablock.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"put":{"tags":["OrigDatablock"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"OrigDatablock.replaceOrCreate__put_OrigDatablocks","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"get":{"tags":["OrigDatablock"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"OrigDatablock.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/OrigDatablock"}}}},"deprecated":false}},"/OrigDatablocks/replaceOrCreate":{"post":{"tags":["OrigDatablock"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"OrigDatablock.replaceOrCreate__post_OrigDatablocks_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/OrigDatablocks/upsertWithWhere":{"post":{"tags":["OrigDatablock"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"OrigDatablock.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/OrigDatablocks/{id}/exists":{"get":{"tags":["OrigDatablock"],"summary":"Check whether a model instance exists in the data source.","operationId":"OrigDatablock.exists__get_OrigDatablocks_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/OrigDatablocks/{id}":{"head":{"tags":["OrigDatablock"],"summary":"Check whether a model instance exists in the data source.","operationId":"OrigDatablock.exists__head_OrigDatablocks_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["OrigDatablock"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"OrigDatablock.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"put":{"tags":["OrigDatablock"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"OrigDatablock.replaceById__put_OrigDatablocks_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["OrigDatablock"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"OrigDatablock.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["OrigDatablock"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"OrigDatablock.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"OrigDatablock id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/OrigDatablocks/{id}/replace":{"post":{"tags":["OrigDatablock"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"OrigDatablock.replaceById__post_OrigDatablocks_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/OrigDatablocks/findOne":{"get":{"tags":["OrigDatablock"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"OrigDatablock.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/OrigDatablocks/update":{"post":{"tags":["OrigDatablock"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"OrigDatablock.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/OrigDatablocks/count":{"get":{"tags":["OrigDatablock"],"summary":"Count instances of the model matched by where from the data source.","operationId":"OrigDatablock.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/OrigDatablocks/change-stream":{"post":{"tags":["OrigDatablock"],"summary":"Create a change stream.","operationId":"OrigDatablock.createChangeStream__post_OrigDatablocks_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["OrigDatablock"],"summary":"Create a change stream.","operationId":"OrigDatablock.createChangeStream__get_OrigDatablocks_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/OrigDatablocks/isValid":{"post":{"tags":["OrigDatablock"],"summary":"Check if data is valid according to a schema","operationId":"OrigDatablock.isValid","parameters":[{"name":"ownableItem","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/OrigDatablocks/findFilesByName":{"get":{"tags":["OrigDatablock"],"summary":"Returns matching file objects in dataFileList grouped by dataset pid","operationId":"OrigDatablock.findFilesByName","parameters":[{"name":"fields","in":"query","description":"Define datasetId field to select a dataset and/or the filenameExp field to define a search regexp for file names.","required":false,"type":"string","format":"JSON"},{"name":"limits","in":"query","description":"Define further query parameters like skip, limit, order","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/Logbooks/{name}":{"get":{"tags":["Logbook"],"summary":"Find Logbook model instance","operationId":"Logbook.findByName","parameters":[{"name":"name","in":"path","description":"Name of the Logbook","required":true,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Logbook model instance","$ref":"#/definitions/Logbook"}}},"deprecated":false}},"/Logbooks":{"get":{"tags":["Logbook"],"summary":"Find all Logbook model instances","operationId":"Logbook.findAll","parameters":[],"responses":{"200":{"description":"Request was successful","schema":{"description":"Array of Logbook model instances","type":"array","items":{"$ref":"#/definitions/Logbook"}}}},"deprecated":false}},"/Logbooks/{name}/{filters}":{"get":{"tags":["Logbook"],"summary":"Filter Logbook entries matching query","operationId":"Logbook.filter","parameters":[{"name":"name","in":"path","description":"The name of the Logbook","required":true,"type":"string"},{"name":"filters","in":"path","description":"Filter rison object, keys: textSearch, showBotMessages, showUserMessages, showImages, skip, limit, sortField","required":true,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Filtered Logbook model instance","$ref":"#/definitions/Logbook"}}},"deprecated":false}},"/Attachments/{id}/dataset":{"get":{"tags":["Attachment"],"summary":"Fetches belongsTo relation dataset.","operationId":"Attachment.prototype.__get__dataset","parameters":[{"name":"id","in":"path","description":"Attachment id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Attachments/{id}/sample":{"get":{"tags":["Attachment"],"summary":"Fetches belongsTo relation sample.","operationId":"Attachment.prototype.__get__sample","parameters":[{"name":"id","in":"path","description":"Attachment id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Attachments/{id}/proposal":{"get":{"tags":["Attachment"],"summary":"Fetches belongsTo relation proposal.","operationId":"Attachment.prototype.__get__proposal","parameters":[{"name":"id","in":"path","description":"Attachment id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Attachments":{"post":{"tags":["Attachment"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Attachment.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"patch":{"tags":["Attachment"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Attachment.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"put":{"tags":["Attachment"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Attachment.replaceOrCreate__put_Attachments","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"get":{"tags":["Attachment"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Attachment.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Attachment"}}}},"deprecated":false}},"/Attachments/replaceOrCreate":{"post":{"tags":["Attachment"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Attachment.replaceOrCreate__post_Attachments_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false}},"/Attachments/upsertWithWhere":{"post":{"tags":["Attachment"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Attachment.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false}},"/Attachments/{id}/exists":{"get":{"tags":["Attachment"],"summary":"Check whether a model instance exists in the data source.","operationId":"Attachment.exists__get_Attachments_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Attachments/{id}":{"head":{"tags":["Attachment"],"summary":"Check whether a model instance exists in the data source.","operationId":"Attachment.exists__head_Attachments_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Attachment"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Attachment.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"put":{"tags":["Attachment"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Attachment.replaceById__put_Attachments_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false},"delete":{"tags":["Attachment"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Attachment.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Attachment"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Attachment.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Attachment id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false}},"/Attachments/{id}/replace":{"post":{"tags":["Attachment"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Attachment.replaceById__post_Attachments_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false}},"/Attachments/findOne":{"get":{"tags":["Attachment"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Attachment.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Attachment"}}},"deprecated":false}},"/Attachments/update":{"post":{"tags":["Attachment"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Attachment.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Attachment"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Attachments/count":{"get":{"tags":["Attachment"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Attachment.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Attachments/change-stream":{"post":{"tags":["Attachment"],"summary":"Create a change stream.","operationId":"Attachment.createChangeStream__post_Attachments_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Attachment"],"summary":"Create a change stream.","operationId":"Attachment.createChangeStream__get_Attachments_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Attachments/isValid":{"post":{"tags":["Attachment"],"summary":"Check if data is valid according to a schema","operationId":"Attachment.isValid","parameters":[{"name":"ownableItem","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/x-any"}}},"deprecated":false}},"/UserSettings/{id}/user":{"get":{"tags":["UserSetting"],"summary":"Fetches belongsTo relation user.","operationId":"UserSetting.prototype.__get__user","parameters":[{"name":"id","in":"path","description":"UserSetting id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/UserSettings":{"post":{"tags":["UserSetting"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"UserSetting.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false},"patch":{"tags":["UserSetting"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"UserSetting.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false},"put":{"tags":["UserSetting"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UserSetting.replaceOrCreate__put_UserSettings","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false},"get":{"tags":["UserSetting"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"UserSetting.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/UserSetting"}}}},"deprecated":false}},"/UserSettings/replaceOrCreate":{"post":{"tags":["UserSetting"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UserSetting.replaceOrCreate__post_UserSettings_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false}},"/UserSettings/upsertWithWhere":{"post":{"tags":["UserSetting"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"UserSetting.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false}},"/UserSettings/{id}/exists":{"get":{"tags":["UserSetting"],"summary":"Check whether a model instance exists in the data source.","operationId":"UserSetting.exists__get_UserSettings_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/UserSettings/{id}":{"head":{"tags":["UserSetting"],"summary":"Check whether a model instance exists in the data source.","operationId":"UserSetting.exists__head_UserSettings_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["UserSetting"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"UserSetting.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false},"put":{"tags":["UserSetting"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UserSetting.replaceById__put_UserSettings_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false},"delete":{"tags":["UserSetting"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"UserSetting.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["UserSetting"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"UserSetting.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"UserSetting id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false}},"/UserSettings/{id}/replace":{"post":{"tags":["UserSetting"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UserSetting.replaceById__post_UserSettings_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false}},"/UserSettings/findOne":{"get":{"tags":["UserSetting"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"UserSetting.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserSetting"}}},"deprecated":false}},"/UserSettings/update":{"post":{"tags":["UserSetting"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"UserSetting.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserSetting"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/UserSettings/count":{"get":{"tags":["UserSetting"],"summary":"Count instances of the model matched by where from the data source.","operationId":"UserSetting.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/UserSettings/change-stream":{"post":{"tags":["UserSetting"],"summary":"Create a change stream.","operationId":"UserSetting.createChangeStream__post_UserSettings_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["UserSetting"],"summary":"Create a change stream.","operationId":"UserSetting.createChangeStream__get_UserSettings_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Instruments/{id}/datasets/{fk}":{"get":{"tags":["Instrument"],"summary":"Find a related item by id for datasets.","operationId":"Instrument.prototype.__findById__datasets","parameters":[{"name":"id","in":"path","description":"Instrument id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datasets","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"delete":{"tags":["Instrument"],"summary":"Delete a related item by id for datasets.","operationId":"Instrument.prototype.__destroyById__datasets","parameters":[{"name":"id","in":"path","description":"Instrument id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datasets","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Instrument"],"summary":"Update a related item by id for datasets.","operationId":"Instrument.prototype.__updateById__datasets","parameters":[{"name":"id","in":"path","description":"Instrument id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datasets","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Instruments/{id}/datasets":{"get":{"tags":["Instrument"],"summary":"Queries datasets of Instrument.","operationId":"Instrument.prototype.__get__datasets","parameters":[{"name":"id","in":"path","description":"Instrument id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Dataset"}}}},"deprecated":false},"post":{"tags":["Instrument"],"summary":"Creates a new instance in datasets of this model.","operationId":"Instrument.prototype.__create__datasets","parameters":[{"name":"id","in":"path","description":"Instrument id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"delete":{"tags":["Instrument"],"summary":"Deletes all datasets of this model.","operationId":"Instrument.prototype.__delete__datasets","parameters":[{"name":"id","in":"path","description":"Instrument id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Instruments/{id}/datasets/count":{"get":{"tags":["Instrument"],"summary":"Counts datasets of Instrument.","operationId":"Instrument.prototype.__count__datasets","parameters":[{"name":"id","in":"path","description":"Instrument id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Instruments":{"post":{"tags":["Instrument"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Instrument.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Instrument"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false},"patch":{"tags":["Instrument"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Instrument.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Instrument"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false},"put":{"tags":["Instrument"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Instrument.replaceOrCreate__put_Instruments","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Instrument"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false},"get":{"tags":["Instrument"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Instrument.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Instrument"}}}},"deprecated":false}},"/Instruments/replaceOrCreate":{"post":{"tags":["Instrument"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Instrument.replaceOrCreate__post_Instruments_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Instrument"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false}},"/Instruments/upsertWithWhere":{"post":{"tags":["Instrument"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Instrument.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Instrument"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false}},"/Instruments/{id}/exists":{"get":{"tags":["Instrument"],"summary":"Check whether a model instance exists in the data source.","operationId":"Instrument.exists__get_Instruments_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Instruments/{id}":{"head":{"tags":["Instrument"],"summary":"Check whether a model instance exists in the data source.","operationId":"Instrument.exists__head_Instruments_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Instrument"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Instrument.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false},"put":{"tags":["Instrument"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Instrument.replaceById__put_Instruments_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Instrument"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false},"delete":{"tags":["Instrument"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Instrument.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Instrument"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Instrument.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Instrument id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Instrument"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false}},"/Instruments/{id}/replace":{"post":{"tags":["Instrument"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Instrument.replaceById__post_Instruments_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Instrument"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false}},"/Instruments/findOne":{"get":{"tags":["Instrument"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Instrument.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Instrument"}}},"deprecated":false}},"/Instruments/update":{"post":{"tags":["Instrument"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Instrument.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Instrument"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Instruments/count":{"get":{"tags":["Instrument"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Instrument.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Instruments/change-stream":{"post":{"tags":["Instrument"],"summary":"Create a change stream.","operationId":"Instrument.createChangeStream__post_Instruments_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Instrument"],"summary":"Create a change stream.","operationId":"Instrument.createChangeStream__get_Instruments_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}}},"tags":[{"name":"User"},{"name":"Dataset","description":"Stores the meta data information for a given collection of files. It defines a list of mandatory and optional metadata fields to be defined. Datasets have a PID field for unique identification. This is the base 'class' for derived documents like raw datasets or derived datasets. The type field is used to distinguish between the different types of datasets. For each dataset in addition an embedded  DatasetLifecycle is created. However the definition of which files belong to a given dataset is defined in an extra OrigDatablock collection."},{"name":"RawDataset","description":"Contains the information for datasets which are the result of measurements or of simulations. Often raw datasets are automatically added as part of an automated ingest step as part of the data acquisition chain at an instrument. This schema inherits the fields from the generic Dataset collection and adds specific fields as defined below."},{"name":"DerivedDataset","description":"Contains the information for datasets which are the result of an analysis step, typically based on raw datasets or other derived datasets as input. Derived datasets are typically added by the researcher pursuing the specific analysis. This schema inherits the fields from the generic Dataset collection and adds specific fields as defined below."},{"name":"Sample","description":"Models describing the characteristics of the samples to be investigated. Raw datasets should be linked to such sample definitions."},{"name":"Proposal","description":"Defines the purpose of an experiment and links an experiment to principal investigator and main proposer"},{"name":"PublishedData","description":"Stores the meta data information for an accessible, published and DOI-identified collection of datasets. It defines a list of mandatory and optional metadata fields to be included. DataCite mandatory fields, a full URL to the landing page and modification times are included."},{"name":"Datablock","description":"When archiving a dataset all files contained in the dataset are listed here together with their checksum information. Several datablocks can be created if the file listing is too long for a single datablock. This partitioning decision is done by the archiving system to allow for chunks of datablocks with managable sizes. E.g a dataset consisting of 10 TB of data could be split into 10 datablocks of about 1 TB each. The upper limit set by the data catalog system itself is given by the fact that documents must be smaller than 16 MB, which typically allows for datasets of about 100000 files."},{"name":"UserCredential"},{"name":"UserIdentity"},{"name":"ApplicationCredential"},{"name":"Policy","description":"Definition of policy parameters relevant for the storgae lifecycle management of the datasets"},{"name":"Job","description":"This collection keeps information about jobs to be excuted in external systems. In particular it keeps information about the jobs submitted for archiving or retrieving datasets stored inside an archive system. It can also be used to keep track of analysis jobs e.g. for automated analysis workflows."},{"name":"ShareGroup","description":"Definition of groups to share datasets between scicat users"},{"name":"OrigDatablock","description":"Container list all files and their attributes which make up a dataset. Usually Filled at the time the datasets metadata is created in the data catalog. Can be used by subsequent archiving processes to create the archived datasets."},{"name":"Logbook"},{"name":"Attachment","description":"Small less than 16 MB attachments, envisaged for png/jpeg previews"},{"name":"UserSetting","description":"User settings such as job count and dataset count"},{"name":"Instrument","description":"Stores metadata information for an instrument"}],"consumes":["application/json","application/x-www-form-urlencoded","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml","application/javascript","text/javascript"],"definitions":{"x-any":{"properties":{}},"AccessToken":{"properties":{"id":{"type":"string"},"ttl":{"default":1209600,"description":"time to live in seconds (2 weeks by default)","type":"number","format":"double"},"scopes":{"description":"Array of scopes granted to this access token.","type":"array","items":{"type":"string"}},"created":{"type":"string","format":"date-time"},"userId":{"$ref":"#/definitions/ObjectID"}},"required":["id"],"additionalProperties":false},"UserSetting":{"description":"User settings such as job count and dataset count","properties":{"columns":{"type":"array","items":{"type":"object"}},"datasetCount":{"default":25,"type":"number","format":"double"},"jobCount":{"default":25,"type":"number","format":"double"},"id":{"$ref":"#/definitions/ObjectID"},"userId":{"$ref":"#/definitions/ObjectID"}},"additionalProperties":false},"UserIdentity":{"properties":{"id":{"type":"number","format":"double"},"userId":{"$ref":"#/definitions/ObjectID"}},"additionalProperties":false},"UserCredential":{"properties":{"provider":{"type":"string"},"authScheme":{"type":"string"},"externalId":{"type":"string"},"profile":{"type":"object"},"credentials":{"type":"object"},"created":{"type":"string","format":"date-time"},"modified":{"type":"string","format":"date-time"},"id":{"$ref":"#/definitions/ObjectID"},"userId":{"$ref":"#/definitions/ObjectID"}},"additionalProperties":false},"User":{"properties":{"realm":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"emailVerified":{"type":"boolean"},"id":{"$ref":"#/definitions/ObjectID"}},"required":["email"],"additionalProperties":false},"Sample":{"description":"Models describing the characteristics of the samples to be investigated. Raw datasets should be linked to such sample definitions.","properties":{"sampleId":{"type":"string"},"owner":{"type":"string"},"description":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"sampleCharacteristics":{"type":"object"},"isPublished":{"description":"Flag is true when data are made publically available","type":"boolean"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdBy":{"description":"Functional or user account name who created this instance","type":"string"},"updatedBy":{"description":"Functional or user account name who last updated this instance","type":"string"},"datasetsId":{"type":"string"},"datasetId":{"type":"string"},"rawDatasetId":{"type":"string"},"derivedDatasetId":{"type":"string"},"updatedAt":{"type":"string","format":"date-time"}},"required":["sampleId","ownerGroup"],"additionalProperties":false},"PublishedData":{"description":"Stores the meta data information for an accessible, published and DOI-identified collection of datasets. It defines a list of mandatory and optional metadata fields to be included. DataCite mandatory fields, a full URL to the landing page and modification times are included.","properties":{"doi":{"description":"Digital Object Identifier","type":"string"},"affiliation":{"description":"Creator Affiliation","type":"string"},"creator":{"description":"Creator of dataset/dataset collection","type":"array","items":{"type":"string"}},"publisher":{"description":"Dataset publisher","type":"string"},"publicationYear":{"description":"Year of publication ","type":"number","format":"double"},"title":{"description":"Title","type":"string"},"url":{"description":"Full URL to the landing page for this DOI","type":"string"},"abstract":{"description":"Abstract text for published datasets","type":"string"},"dataDescription":{"description":"Link to description of how to re-use data","type":"string"},"resourceType":{"description":"e.g. raw/ derived","type":"string"},"numberOfFiles":{"description":"Number of files","type":"number","format":"double"},"sizeOfArchive":{"description":"Size of archive","type":"number","format":"double"},"pidArray":{"description":"Array of one or more PIDS which make up the published data","type":"array","items":{"type":"string"}},"authors":{"description":"List of Names of authors of the to be published data","type":"array","items":{"type":"string"}},"registeredTime":{"description":"Time when doi is successfully registered","type":"string","format":"date-time"},"status":{"description":"Indication of position in publication workflow e.g. doiRegistered","type":"string"},"scicatUser":{"description":"The username of the user that clicks the publish button in the client","type":"string"},"thumbnail":{"description":"Small, less than 16 MB base 64 image preview of dataset","type":"string"},"relatedPublications":{"description":"List of URLs pointing to related publications like DOI URLS of journal articles","type":"array","items":{"type":"string"}},"downloadLink":{"description":"URL pointing to page from which data can be downloaded","type":"string"},"createdBy":{"description":"Functional or user account name who created this instance","type":"string"},"updatedBy":{"description":"Functional or user account name who last updated this instance","type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["doi","creator","publisher","publicationYear","title","abstract","dataDescription","resourceType","pidArray"],"additionalProperties":false},"DatasetLifecycle":{"description":"For each dataset there exists an embedded dataset lifecycle document which describes the current status of the dataset during its lifetime with respect to the storage handling systems","properties":{"archivable":{"description":"Flag which is true, if dataset is available to be archived and no archive job for this dataset exists yet.","type":"boolean"},"retrievable":{"description":"Flag which is true, if dataset is stored on archive system and is ready to be retrieved.","type":"boolean"},"publishable":{"description":"Flag which is true, if dataset can be published. Usually requires a longterm storage option on tape or similar.","type":"boolean"},"dateOfDiskPurging":{"description":"Day when dataset will be removed from disk, assuming that is already stored on tape.","type":"string","format":"date-time"},"archiveRetentionTime":{"description":"Day when the dataset's future fate will be evaluated again, e.g. to decide if the dataset can be deleted from archive.","type":"string","format":"date-time"},"dateOfPublishing":{"description":"Day when dataset is supposed to become public according to data policy","type":"string","format":"date-time"},"publishedOn":{"description":"Day when dataset was published.","type":"string","format":"date-time"},"isOnCentralDisk":{"description":"Flag which is true, if full dataset is available on central fileserver. If false data needs to be copied from decentral storage place to  a cache server before the ingest. This information needs to be transferred to the archive system at archive time","type":"boolean"},"archiveStatusMessage":{"description":"Short string defining current status of Dataset with respect to storage on disk/tape.","type":"string"},"retrieveStatusMessage":{"description":"Latest message for this dataset concerning retrieve from archive system.","type":"string"},"archiveReturnMessage":{"description":"Detailed status or error message returned by archive system when archiving this dataset.","type":"object"},"retrieveReturnMessage":{"description":"Detailed status or error message returned by archive system when retrieving this dataset.","type":"object"},"exportedTo":{"description":"Location of the last export destination.","type":"string"},"retrieveIntegrityCheck":{"description":"Set to true when checksum tests after retrieve of datasets were successful","type":"boolean"},"id":{"type":"string"}},"additionalProperties":false},"Datablock":{"description":"When archiving a dataset all files contained in the dataset are listed here together with their checksum information. Several datablocks can be created if the file listing is too long for a single datablock. This partitioning decision is done by the archiving system to allow for chunks of datablocks with managable sizes. E.g a dataset consisting of 10 TB of data could be split into 10 datablocks of about 1 TB each. The upper limit set by the data catalog system itself is given by the fact that documents must be smaller than 16 MB, which typically allows for datasets of about 100000 files.","properties":{"id":{"description":"Catalog internal UUIDv4 for datablock","type":"string"},"archiveId":{"description":"Unique identifier given bey archive system to the stored datablock. This id is used when data is retrieved back.","type":"string"},"size":{"description":"Total size in bytes of all files in datablock when unpacked","type":"number","format":"double"},"packedSize":{"description":"Size of datablock package file","type":"number","format":"double"},"chkAlg":{"description":"Algoritm used for calculation of checksums, e.g. sha2","type":"string"},"version":{"description":"Version string defining format of how data is packed and stored in archive","type":"string"},"dataFileList":{"type":"array","items":{"$ref":"#/definitions/Datafile"}},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdBy":{"description":"Functional or user account name who created this instance","type":"string"},"updatedBy":{"description":"Functional or user account name who last updated this instance","type":"string"},"datasetId":{"type":"string"},"rawDatasetId":{"type":"string"},"derivedDatasetId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["id","archiveId","size","version","dataFileList","ownerGroup"],"additionalProperties":false},"OrigDatablock":{"description":"Container list all files and their attributes which make up a dataset. Usually Filled at the time the datasets metadata is created in the data catalog. Can be used by subsequent archiving processes to create the archived datasets.","properties":{"id":{"$ref":"#/definitions/ObjectID"},"size":{"description":"Total size in bytes of all files contained in the dataFileList","type":"number","format":"double"},"dataFileList":{"description":"List of files contained in the linked dataset. Files can be regular files, folders and softlinks. All file paths are relative paths with respect to the sourceFolder location of the linked dataset.","type":"array","items":{"$ref":"#/definitions/Datafile"}},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdBy":{"description":"Functional or user account name who created this instance","type":"string"},"updatedBy":{"description":"Functional or user account name who last updated this instance","type":"string"},"datasetId":{"type":"string"},"rawDatasetId":{"type":"string"},"derivedDatasetId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["size","dataFileList","ownerGroup"],"additionalProperties":false},"Message":{"description":"To get auto-created history information.","properties":{"id":{"description":"id currently needed by limitation in embedsmany","type":"string"}},"required":["id"],"additionalProperties":false},"Attachment":{"description":"Small less than 16 MB attachments, envisaged for png/jpeg previews","properties":{"thumbnail":{"default":"retrieve","description":"Contains a thumbnail preview in base64 encoded png format for a given dataset","type":"string"},"caption":{"default":"","description":"Attachment caption to show in catanie","type":"string"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdBy":{"description":"Functional or user account name who created this instance","type":"string"},"updatedBy":{"description":"Functional or user account name who last updated this instance","type":"string"},"id":{"$ref":"#/definitions/ObjectID"},"datasetId":{"type":"string"},"sampleId":{"type":"string"},"proposalId":{"type":"string"},"rawDatasetId":{"type":"string"},"derivedDatasetId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["thumbnail","ownerGroup"],"additionalProperties":false},"Instrument":{"description":"Stores metadata information for an instrument","properties":{"pid":{"description":"Persistent Identifier derived from UUIDv4","type":"string"},"name":{"type":"string"},"customMetadata":{"type":"object"}},"required":["pid","name"],"additionalProperties":false},"Technique":{"description":"Stores the metadata information for a technique","properties":{"pid":{"description":"Persistent Identifier dervied from UUIDv4","type":"string"},"name":{"description":"The name of the technique","type":"string"}},"required":["pid","name"],"additionalProperties":false},"Dataset":{"description":"Stores the meta data information for a given collection of files. It defines a list of mandatory and optional metadata fields to be defined. Datasets have a PID field for unique identification. This is the base 'class' for derived documents like raw datasets or derived datasets. The type field is used to distinguish between the different types of datasets. For each dataset in addition an embedded  DatasetLifecycle is created. However the definition of which files belong to a given dataset is defined in an extra OrigDatablock collection.","properties":{"pid":{"description":"Persistent Identifier for datasets derived from UUIDv4 and prepended automatically by site specific PID prefix like 20.500.12345/","type":"string"},"owner":{"description":"Owner of the data set, usually first name + lastname","type":"string"},"ownerEmail":{"description":"Email of owner of the data set","type":"string"},"orcidOfOwner":{"description":"ORCID of owner https://orcid.org if available","type":"string"},"contactEmail":{"description":"Email of contact person for this dataset","type":"string"},"sourceFolder":{"description":"Absolute file path on file server containing the files of this dataset, e.g. /some/path/to/sourcefolder. In case of a single file dataset, e.g. HDF5 data, it contains the path up to, but excluding the filename. Trailing slashes are removed.","type":"string"},"sourceFolderHost":{"description":"DNS host name of file server hosting sourceFolder, optionally including protocol e.g. [protocol://]fileserver1.example.com","type":"string"},"size":{"description":"Total size of all source files contained in source folder on disk when unpacked","type":"number","format":"double"},"packedSize":{"description":"Total size of all datablock package files created for this dataset","type":"number","format":"double"},"numberOfFiles":{"description":"Total number of lines in filelisting of all OrigDatablocks for this dataset","type":"number","format":"double"},"numberOfFilesArchived":{"description":"Total number of lines in filelisting of all Datablocks for this dataset","type":"number","format":"double"},"creationTime":{"description":"Time when dataset became fully available on disk, i.e. all containing files have been written. Format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.","type":"string","format":"date-time"},"type":{"description":"Characterize type of dataset, either 'base' or 'raw' or 'derived'. Autofilled when choosing the proper inherited models","type":"string"},"validationStatus":{"description":"Defines a level of trust, e.g. a measure of how much data was verified or used by other persons","type":"string"},"keywords":{"description":"Array of tags associated with the meaning or contents of this dataset. Values should ideally come from defined vocabularies, taxonomies, ontologies or knowledge graphs","type":"array","items":{"type":"string"}},"description":{"description":"Free text explanation of contents of dataset","type":"string"},"datasetName":{"description":"A name for the dataset, given by the creator to carry some semantic meaning. Useful for display purposes e.g. instead of displaying the pid. Will be autofilled if missing using info from sourceFolder","type":"string"},"classification":{"description":"ACIA information about AUthenticity,COnfidentiality,INtegrity and AVailability requirements of dataset. E.g. AV(ailabilty)=medium could trigger the creation of a two tape copies. Format 'AV=medium,CO=low'","type":"string"},"license":{"description":"Name of license under which data can be used","type":"string"},"version":{"description":"Version of API used in creation of dataset","type":"string"},"isPublished":{"description":"Flag is true when data are made publically available","type":"boolean"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdBy":{"description":"Functional or user account name who created this instance","type":"string"},"updatedBy":{"description":"Functional or user account name who last updated this instance","type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"publishedDataId":{"type":"string"},"publisheddataId":{"type":"string"},"datasetlifecycle":{"$ref":"#/definitions/DatasetLifecycle"},"history":{"type":"array","items":{"$ref":"#/definitions/Message"}},"instrumentId":{"type":"string"},"techniques":{"type":"array","items":{"$ref":"#/definitions/Technique"}}},"required":["pid","owner","contactEmail","sourceFolder","creationTime","type","ownerGroup"],"additionalProperties":false},"Proposal":{"description":"Defines the purpose of an experiment and links an experiment to principal investigator and main proposer","properties":{"proposalId":{"description":"Globally unique identifier of a proposal, eg. PID-prefix/internal-proposal-number. PID prefix is auto prepended","type":"string"},"pi_email":{"description":"Email of principal investigator","type":"string"},"pi_firstname":{"description":"First name of principal investigator","type":"string"},"pi_lastname":{"description":"Last name of principal investigator","type":"string"},"email":{"description":"Email of main proposer","type":"string"},"firstname":{"description":"First name of main proposer","type":"string"},"lastname":{"description":"Last name of main proposer","type":"string"},"title":{"type":"string"},"abstract":{"type":"string"},"startTime":{"type":"string","format":"date-time"},"endTime":{"type":"string","format":"date-time"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdBy":{"description":"Functional or user account name who created this instance","type":"string"},"updatedBy":{"description":"Functional or user account name who last updated this instance","type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"MeasurementPeriodList":{"type":"array","items":{"$ref":"#/definitions/MeasurementPeriod"}}},"required":["proposalId","email","ownerGroup"],"additionalProperties":false},"RawDataset":{"description":"Contains the information for datasets which are the result of measurements or of simulations. Often raw datasets are automatically added as part of an automated ingest step as part of the data acquisition chain at an instrument. This schema inherits the fields from the generic Dataset collection and adds specific fields as defined below.","properties":{"principalInvestigator":{"description":"Email of principal investigator","type":"string"},"endTime":{"description":"Time of end of data taking for this dataset, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server","type":"string","format":"date-time"},"creationLocation":{"description":"Unique location identifier where data was taken, usually in the form /Site-name/facility-name/instrumentOrBeamline-name","type":"string"},"dataFormat":{"description":"Defines format of subsequent scientific meta data, e.g Nexus Version x.y","type":"string"},"scientificMetadata":{"description":"JSON object containing the scientific meta data","type":"object"},"pid":{"description":"Persistent Identifier for datasets derived from UUIDv4 and prepended automatically by site specific PID prefix like 20.500.12345/","type":"string"},"owner":{"description":"Owner of the data set, usually first name + lastname","type":"string"},"ownerEmail":{"description":"Email of owner of the data set","type":"string"},"orcidOfOwner":{"description":"ORCID of owner https://orcid.org if available","type":"string"},"contactEmail":{"description":"Email of contact person for this dataset","type":"string"},"sourceFolder":{"description":"Absolute file path on file server containing the files of this dataset, e.g. /some/path/to/sourcefolder. In case of a single file dataset, e.g. HDF5 data, it contains the path up to, but excluding the filename. Trailing slashes are removed.","type":"string"},"sourceFolderHost":{"description":"DNS host name of file server hosting sourceFolder, optionally including protocol e.g. [protocol://]fileserver1.example.com","type":"string"},"size":{"description":"Total size of all source files contained in source folder on disk when unpacked","type":"number","format":"double"},"packedSize":{"description":"Total size of all datablock package files created for this dataset","type":"number","format":"double"},"numberOfFiles":{"description":"Total number of lines in filelisting of all OrigDatablocks for this dataset","type":"number","format":"double"},"numberOfFilesArchived":{"description":"Total number of lines in filelisting of all Datablocks for this dataset","type":"number","format":"double"},"creationTime":{"description":"Time when dataset became fully available on disk, i.e. all containing files have been written. Format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.","type":"string","format":"date-time"},"type":{"description":"Characterize type of dataset, either 'base' or 'raw' or 'derived'. Autofilled when choosing the proper inherited models","type":"string"},"validationStatus":{"description":"Defines a level of trust, e.g. a measure of how much data was verified or used by other persons","type":"string"},"keywords":{"description":"Array of tags associated with the meaning or contents of this dataset. Values should ideally come from defined vocabularies, taxonomies, ontologies or knowledge graphs","type":"array","items":{"type":"string"}},"description":{"description":"Free text explanation of contents of dataset","type":"string"},"datasetName":{"description":"A name for the dataset, given by the creator to carry some semantic meaning. Useful for display purposes e.g. instead of displaying the pid. Will be autofilled if missing using info from sourceFolder","type":"string"},"classification":{"description":"ACIA information about AUthenticity,COnfidentiality,INtegrity and AVailability requirements of dataset. E.g. AV(ailabilty)=medium could trigger the creation of a two tape copies. Format 'AV=medium,CO=low'","type":"string"},"license":{"description":"Name of license under which data can be used","type":"string"},"version":{"description":"Version of API used in creation of dataset","type":"string"},"isPublished":{"description":"Flag is true when data are made publically available","type":"boolean"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdBy":{"description":"Functional or user account name who created this instance","type":"string"},"updatedBy":{"description":"Functional or user account name who last updated this instance","type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"sampleId":{"type":"string"},"proposalId":{"type":"string"},"publisheddataId":{"type":"string"},"datasetlifecycle":{"$ref":"#/definitions/DatasetLifecycle"},"history":{"type":"array","items":{"$ref":"#/definitions/Message"}},"instrumentId":{"type":"string"},"techniques":{"type":"array","items":{"$ref":"#/definitions/Technique"}}},"required":["principalInvestigator","creationLocation","pid","owner","contactEmail","sourceFolder","creationTime","type","ownerGroup"],"additionalProperties":false},"DerivedDataset":{"description":"Contains the information for datasets which are the result of an analysis step, typically based on raw datasets or other derived datasets as input. Derived datasets are typically added by the researcher pursuing the specific analysis. This schema inherits the fields from the generic Dataset collection and adds specific fields as defined below.","properties":{"investigator":{"description":"Email of person pursuing the data analysis","type":"string"},"inputDatasets":{"description":"Array of input dataset identifiers used in producing the derived dataset. Ideally these are the global identifier to existing datasets inside this or federated data catalogs","type":"array","items":{"type":"string"}},"usedSoftware":{"description":"A list of links to software repositories which uniquely identifies the software used and the version for yielding the derived data","type":"array","items":{"type":"string"}},"jobParameters":{"description":"The creation process of the drived data will usually depend on input job parameters. The full structure of these input parameters are stored here","type":"object"},"jobLogData":{"description":"The output job logfile. Keep the size of this log data well below 15 MB ","type":"string"},"scientificMetadata":{"description":"JSON object containing the scientific meta data","type":"object"},"pid":{"description":"Persistent Identifier for datasets derived from UUIDv4 and prepended automatically by site specific PID prefix like 20.500.12345/","type":"string"},"owner":{"description":"Owner of the data set, usually first name + lastname","type":"string"},"ownerEmail":{"description":"Email of owner of the data set","type":"string"},"orcidOfOwner":{"description":"ORCID of owner https://orcid.org if available","type":"string"},"contactEmail":{"description":"Email of contact person for this dataset","type":"string"},"sourceFolder":{"description":"Absolute file path on file server containing the files of this dataset, e.g. /some/path/to/sourcefolder. In case of a single file dataset, e.g. HDF5 data, it contains the path up to, but excluding the filename. Trailing slashes are removed.","type":"string"},"sourceFolderHost":{"description":"DNS host name of file server hosting sourceFolder, optionally including protocol e.g. [protocol://]fileserver1.example.com","type":"string"},"size":{"description":"Total size of all source files contained in source folder on disk when unpacked","type":"number","format":"double"},"packedSize":{"description":"Total size of all datablock package files created for this dataset","type":"number","format":"double"},"numberOfFiles":{"description":"Total number of lines in filelisting of all OrigDatablocks for this dataset","type":"number","format":"double"},"numberOfFilesArchived":{"description":"Total number of lines in filelisting of all Datablocks for this dataset","type":"number","format":"double"},"creationTime":{"description":"Time when dataset became fully available on disk, i.e. all containing files have been written. Format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.","type":"string","format":"date-time"},"type":{"description":"Characterize type of dataset, either 'base' or 'raw' or 'derived'. Autofilled when choosing the proper inherited models","type":"string"},"validationStatus":{"description":"Defines a level of trust, e.g. a measure of how much data was verified or used by other persons","type":"string"},"keywords":{"description":"Array of tags associated with the meaning or contents of this dataset. Values should ideally come from defined vocabularies, taxonomies, ontologies or knowledge graphs","type":"array","items":{"type":"string"}},"description":{"description":"Free text explanation of contents of dataset","type":"string"},"datasetName":{"description":"A name for the dataset, given by the creator to carry some semantic meaning. Useful for display purposes e.g. instead of displaying the pid. Will be autofilled if missing using info from sourceFolder","type":"string"},"classification":{"description":"ACIA information about AUthenticity,COnfidentiality,INtegrity and AVailability requirements of dataset. E.g. AV(ailabilty)=medium could trigger the creation of a two tape copies. Format 'AV=medium,CO=low'","type":"string"},"license":{"description":"Name of license under which data can be used","type":"string"},"version":{"description":"Version of API used in creation of dataset","type":"string"},"isPublished":{"description":"Flag is true when data are made publically available","type":"boolean"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdBy":{"description":"Functional or user account name who created this instance","type":"string"},"updatedBy":{"description":"Functional or user account name who last updated this instance","type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"publisheddataId":{"type":"string"},"datasetlifecycle":{"$ref":"#/definitions/DatasetLifecycle"},"history":{"type":"array","items":{"$ref":"#/definitions/Message"}},"instrumentId":{"type":"string"},"techniques":{"type":"array","items":{"$ref":"#/definitions/Technique"}}},"required":["investigator","inputDatasets","usedSoftware","pid","owner","contactEmail","sourceFolder","creationTime","type","ownerGroup"],"additionalProperties":false},"MeasurementPeriod":{"description":"Embedded information used inside proposals to define which type of experiment as to be pursued where (at which intrument) and when.","properties":{"id":{"description":"id currently needed by limitation in embedsmany","type":"string"},"instrument":{"description":"Instrument or beamline identifier where measurement was pursued, e.g. /PSI/SLS/TOMCAT","type":"string"},"start":{"description":"Time when measurement period started, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server","type":"string","format":"date-time"},"end":{"description":"Time when measurement period ended, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server","type":"string","format":"date-time"},"comment":{"description":"Additional information relevant for this measurement period, e.g. if different accounts were used for data taking","type":"string"}},"required":["id","instrument"],"additionalProperties":false},"ApplicationCredential":{"properties":{"provider":{"type":"string"},"authScheme":{"type":"string"},"credentials":{"type":"object"},"created":{"type":"string","format":"date-time"},"modified":{"type":"string","format":"date-time"},"id":{"$ref":"#/definitions/ObjectID"}},"required":["provider"],"additionalProperties":false},"Policy":{"description":"Definition of policy parameters relevant for the storgae lifecycle management of the datasets","properties":{"manager":{"description":"Defines the emails of users that can modify the policy parameters","type":"array","items":{"type":"string"}},"tapeRedundancy":{"default":"low","description":"Defines the level of redundancy in storage to minimize loss of data. Allowed values are low, medium, high. Low could e.g. mean one tape copy only, medium could mean two tape copies and high two geo-redundant tape copies","type":"string"},"autoArchive":{"default":true,"description":"Flag to indicate that a dataset should be automatically archived after ingest. If false then archive delay is ignored","type":"boolean"},"autoArchiveDelay":{"default":7,"description":"Number of days after dataset creation that (remaining) datasets are archived automatically","type":"number","format":"double"},"archiveEmailNotification":{"default":false,"description":"Flag is true when an email notification should be sent to archiveEmailsToBeNotified upon an archive job creation","type":"boolean"},"archiveEmailsToBeNotified":{"description":"Array of additional email addresses that should be notified up an archive job creation","type":"array","items":{"type":"string"}},"retrieveEmailNotification":{"default":false,"description":"Flag is true when an email notification should be sent to retrieveEmailsToBeNotified upon a retrieval job creation","type":"boolean"},"retrieveEmailsToBeNotified":{"description":"Array of additional email addresses that should be notified up a retrieval job creation","type":"array","items":{"type":"string"}},"embargoPeriod":{"default":3,"description":"Number of years after dataset creation before the dataset becomes public","type":"number","format":"double"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdBy":{"description":"Functional or user account name who created this instance","type":"string"},"updatedBy":{"description":"Functional or user account name who last updated this instance","type":"string"},"id":{"$ref":"#/definitions/ObjectID"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["ownerGroup"],"additionalProperties":false},"Job":{"description":"This collection keeps information about jobs to be excuted in external systems. In particular it keeps information about the jobs submitted for archiving or retrieving datasets stored inside an archive system. It can also be used to keep track of analysis jobs e.g. for automated analysis workflows.","properties":{"emailJobInitiator":{"description":"The email of the person initiating the job request","type":"string"},"type":{"default":"retrieve","description":"Type of job, e.g. archive, retrieve etc","type":"string"},"creationTime":{"description":"Time when job is created. Format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"executionTime":{"description":"Time when job should be executed. If not specified then the Job will be executed asap. Format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"jobParams":{"description":"Object of key-value pairs defining job input parameters, e.g. 'desinationPath' for retrieve jobs or 'tapeCopies' for archive jobs","type":"object"},"jobStatusMessage":{"description":"Defines current status of job lifecycle","type":"string"},"datasetList":{"description":"Array of objects with keys: pid, files. The value for the pid key defines the dataset ID, the value for the files key is an array of file names. This array is either an empty array, implying that all files within the dataset are selected or an explicit list of dataset-relative file paths, which should be selected","type":"object"},"jobResultObject":{"description":"Detailed return value after job is finished","type":"object"},"id":{"$ref":"#/definitions/ObjectID"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["emailJobInitiator","type","datasetList"],"additionalProperties":false},"ShareGroup":{"description":"Definition of groups to share datasets between scicat users","properties":{"groupID":{"description":"group short name id","type":"string"},"members":{"description":"Defines the emails of users that data is shared to","type":"array","items":{"type":"string"}},"datasets":{"description":"Defines the datasets which are shared","type":"array","items":{"type":"string"}},"id":{"$ref":"#/definitions/ObjectID"}},"additionalProperties":false},"Logbook":{"properties":{"name":{"type":"string"},"roomId":{"type":"string"},"messages":{"type":"array","items":{"type":"object"}}},"required":["roomId"],"additionalProperties":false},"ObjectID":{"type":"string","pattern":"^[a-fA-F\\d]{24}$"},"Datafile":{"description":"Embedded schema definition for which fields are required for each file","properties":{"path":{"description":"Relative path of the file within the dataset folder","type":"string"},"size":{"description":"Uncompressed file size in bytes","type":"number","format":"double"},"time":{"description":"Time of file creation on disk, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server","type":"string","format":"date-time"},"chk":{"description":"Checksum for the file, e.g. its sha-2 hashstring","type":"string"},"uid":{"description":"optional: user ID name as seen on filesystem","type":"string"},"gid":{"description":"optional: group ID name as seen on filesystem","type":"string"},"perm":{"description":"optional: Posix permission bits","type":"string"}},"required":["path"],"additionalProperties":false}}}